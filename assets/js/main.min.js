// assets/js/main.js

// Function to create a cookie
function createCookie(name, value, days) {
    var expires = "";
    if (days) {
      var date = new Date();
      date.setTime(date.getTime() + 24 * days * 60 * 60 * 1000);
      expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + value + expires + "; path=/";
  }
  
  // Function to read a cookie
  function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(";");
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) === " ") c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) === 0)
        return c.substring(nameEQ.length, c.length);
    }
    return null;
  }
  
  // Function to add cookie consent listener
  function addCookieConsentListener() {
    var acceptButton = document.getElementById("cookie-notice-accept");
    var cookieNotice = document.getElementById("cookie-notice");
  
    if (acceptButton && cookieNotice) {
      acceptButton.addEventListener("click", function () {
        createCookie(cookieName, "true", 31);
        cookieNotice.style.display = "none";
        location.reload();
      });
    }
  }
  
  // Function to initialize Google Analytics
  function googleAnalytics() {
    function gtag() {
      dataLayer.push(arguments);
    }
  
    if (analyticsName && analyticsName.toLowerCase() !== "") {
      window.dataLayer = window.dataLayer || [];
      gtag("js", new Date());
      gtag("config", analyticsName);
  
      window.ga =
        window.ga ||
        function () {
          (ga.q = ga.q || []).push(arguments);
        };
      ga.l = +new Date();
      ga("create", analyticsName, "auto");
      ga("send", "pageview");
    }
  }
  
  // Theme-related functions and variables
  const themeButton = {
    light: '<i class="fas fa-adjust" aria-hidden="true"></i>',
    dark: '<i class="fas fa-adjust fa-rotate-180" aria-hidden="true"></i>',
  };
  
  function currentTheme() {
    return sessionStorage.getItem("theme");
  }
  
  function setMode(mode) {
    document.documentElement.setAttribute("data-theme", mode);
    sessionStorage.setItem("theme", mode);
    var themeToggle = document.getElementById("theme-toggle");
    if (themeToggle) {
      themeToggle.innerHTML = themeButton[mode];
    }
  }
  
  function themeToggle() {
    var mode = currentTheme() === "light" ? "dark" : "light";
    setMode(mode);
  }
  
  // Initialize theme on window load
  window.onload = function () {
    if (isAutoTheme) {
      if (!currentTheme()) {
        var prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        );
        prefersDark.addEventListener("change", function (e) {
          if (e.matches) {
            sessionStorage.setItem("theme", "dark");
            setMode("dark");
          }
        });
      }
      var savedTheme = currentTheme();
      setMode(savedTheme || "light");
    }
  };
  
  // Initialize Masonry layout
  try {
    var elem = document.querySelector(".grid");
    var msnry = new Masonry(elem, {
      itemSelector: ".grid-item",
      columnWidth: ".grid-sizer",
      gutter: ".gutter-sizer",
      percentPosition: true,
    });
    var imgLoad = imagesLoaded(elem);
    imgLoad.on("progress", function (instance, image) {
      msnry.layout();
    });
  } catch (e) {
    if (!(e instanceof ReferenceError)) throw e;
  }
  
  // Toggle navigation menu on mobile
  document.addEventListener("DOMContentLoaded", function () {
    var pull = document.getElementById("pull");
    var nav = document.querySelector("nav ul");
  
    if (pull && nav) {
      ["click", "touch"].forEach(function (event) {
        pull.addEventListener(event, function () {
          nav.classList.toggle("hide");
        }, false);
      });
    }
  
    // Initialize Parallax Background Effect
    initParallaxBackground();
  });
  
  // Function to initialize parallax background effect
  function initParallaxBackground() {
    const parallaxElement = document.getElementById("main");
    if (!parallaxElement) return;
  
    let ticking = false;
  
    window.addEventListener("scroll", function () {
      if (!ticking) {
        window.requestAnimationFrame(function () {
          let scrollY = window.scrollY || window.pageYOffset || document.body.scrollTop;
          let backgroundY = scrollY * 0.5; // Parallax factor
          parallaxElement.style.backgroundPosition = `center ${backgroundY}px`;
          ticking = false;
        });
        ticking = true;
      }
    });
  }
  
  // Initialize Cookie Consent and Google Analytics based on cookie
  if (isCookieConsent.toLowerCase() === "true") {
    addCookieConsentListener();
    if (readCookie(cookieName) === "true") {
      googleAnalytics();
    } else {
      var cookieNotice = document.getElementById("cookie-notice");
      if (cookieNotice) {
        cookieNotice.style.display = "block";
      }
    }
  } else {
    googleAnalytics();
  }