(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    141323,       2867]
NotebookOptionsPosition[    132088,       2750]
NotebookOutlinePosition[    132430,       2765]
CellTagsIndexPosition[    132387,       2762]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Problem Set", "Title",ExpressionUUID->"a225c751-6c2e-4984-9409-d358355e2ab6"],

Cell[CellGroupData[{

Cell["Section I (Oct. 4)", "Section",ExpressionUUID->"6fb96a00-a7c8-47ee-8a94-83c6a85b6487"],

Cell[CellGroupData[{

Cell[TextData[{
 "Consider two kets ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"\[Alpha]"},
    "Ket",
    DisplayFunction->(
     RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
   TraditionalForm]], "ItemParagraph",
  FormatType->"TraditionalForm",ExpressionUUID->
  "75ae720b-cf13-4842-a6fc-2ed29ac7f977"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"\[Beta]"},
    "Ket",
    DisplayFunction->(
     RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
   TraditionalForm]], "ItemParagraph",
  FormatType->"TraditionalForm",ExpressionUUID->
  "26e83494-c0e9-482c-838f-4402e6715f88"],
 ". Let ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"i"},
    "Ket",
    DisplayFunction->(
     RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "518f4784-bb16-40f4-ace5-13ba76761e6c"],
 " be a complete set of basis ket states. Suppose ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"i","\[Alpha]"},
    "BraKet",
    DisplayFunction->(
     RowBox[{"\[LeftAngleBracket]", #, "\[VerticalSeparator]", #2, 
       "\[RightAngleBracket]"}]& )], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5c70262d-5329-4f70-a918-deb53fdcfa9c"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"i","\[Beta]"},
    "BraKet",
    DisplayFunction->(
     RowBox[{"\[LeftAngleBracket]", #, "\[VerticalSeparator]", #2, 
       "\[RightAngleBracket]"}]& )], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ee6baf51-7abe-4833-adec-3e9c2c7fc7ed"],
 " are known for all basis states ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"i"},
    "Ket",
    DisplayFunction->(
     RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "46feb882-688c-4d90-89db-607f9f98fc5a"],
 ". Find the matrix representation of the operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{"\[Alpha]"},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
    TemplateBox[{"\[Beta]"},
     "Bra",
     DisplayFunction->(
      RowBox[{"\[LeftAngleBracket]", #, "\[RightBracketingBar]"}]& )]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "341dd022-178c-4f9b-ba05-eff77ec0029e"],
 " in that basis."
}], "ItemNumbered",ExpressionUUID->"2917b9b3-8f90-48c7-bbfb-28fcdc5ffddd"],

Cell[TextData[{
 "We now consider a qubit system and let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{"\[Alpha]"},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], "=", 
    TemplateBox[{RowBox[{
        SuperscriptBox["\[Sigma]", "z"], "=", 
        RowBox[{"+", "1"}]}]},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9e54a211-c0c8-4676-8a8e-57d1ebbd82ae"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{"\[Beta]"},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], "=", 
    TemplateBox[{RowBox[{
        SuperscriptBox["\[Sigma]", "x"], "=", 
        RowBox[{"+", "1"}]}]},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "291a7194-2ee5-4b3f-abf4-55a1790e98f0"],
 ". Write down the explicit square matrix that corresponds to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{"\[Alpha]"},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
    TemplateBox[{"\[Beta]"},
     "Bra",
     DisplayFunction->(
      RowBox[{"\[LeftAngleBracket]", #, "\[RightBracketingBar]"}]& )]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fd05316f-80ea-4d98-8b42-4a10660e93f4"],
 " in the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "z"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9ea6c459-ecda-464a-b660-b007a6c8e1e1"],
 " basis."
}], "ItemNumbered",ExpressionUUID->"909f70c9-08d5-40a7-bed9-c770bc351222"],

Cell[TextData[{
 "Construct the state ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{RowBox[{
       RowBox[{
         StyleBox["n", FontWeight -> "Bold"], "\[CenterDot]", 
         StyleBox["\[Sigma]", FontWeight -> "Bold"]}], "=", 
       RowBox[{"+", "1"}]}]},
    "Ket",
    DisplayFunction->(
     RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "479a3650-5e39-428c-a42b-03ac7a21d8f4"],
 " such that"
}], "ItemNumbered",ExpressionUUID->"7d6232fe-a487-403b-b4ef-4861a5ff54db"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["n",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["\[Sigma]",
       FontWeight->"Bold"]}], 
     TemplateBox[{RowBox[{
         RowBox[{
           StyleBox["n", FontWeight -> "Bold"], "\[CenterDot]", 
           StyleBox["\[Sigma]", FontWeight -> "Bold"]}], "=", 
         RowBox[{"+", "1"}]}]},
      "Ket",
      DisplayFunction->(
       RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     TemplateBox[{RowBox[{
         RowBox[{
           StyleBox["n", FontWeight -> "Bold"], "\[CenterDot]", 
           StyleBox["\[Sigma]", FontWeight -> "Bold"]}], "=", 
         RowBox[{"+", "1"}]}]},
      "Ket",
      DisplayFunction->(
       RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}]}], 
   ","}], TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->\
"bd99085c-9404-42b8-a426-7cbdaf84c25f"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["n",
     FontWeight->"Bold"], 
    StyleBox["=",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      SubscriptBox[
       StyleBox["n",
        FontWeight->"Plain"], "x"], ",", 
      SubscriptBox["n", "y"], ",", 
      SubscriptBox["n", "z"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "af2d62b9-bd93-41f3-bf05-af3a93e53671"],
 " is a unit vector."
}], "ItemParagraph",ExpressionUUID->"8e03e83d-9573-43a6-b259-5b2cb45fb395"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["n",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["\[Sigma]",
     FontWeight->"Bold"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ed654502-025a-4846-9cb3-356b91fc7ba9"],
 " is an ",
 StyleBox["operator",
  FontSlant->"Italic"]
}], "Subitem",ExpressionUUID->"9d3a1a1f-ff2b-42d9-92de-a609d7f543e9"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["n",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["\[Sigma]",
     FontWeight->"Bold"]}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["n", "x"], 
     SuperscriptBox["\[Sigma]", "x"]}], "+", 
    RowBox[{
     SubscriptBox["n", "y"], 
     SuperscriptBox["\[Sigma]", "y"]}], "+", 
    RowBox[{
     SubscriptBox["n", "z"], 
     RowBox[{
      SuperscriptBox["\[Sigma]", "z"], "."}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"b8b3962a-d351-\
49a5-ab31-26eef371de02"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["\[Sigma]",
     FontWeight->"Bold"], 
    StyleBox["=",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      SuperscriptBox[
       StyleBox["\[Sigma]",
        FontWeight->"Plain"], "x"], ",", 
      SuperscriptBox[
       StyleBox["\[Sigma]",
        FontWeight->"Plain"], "y"], ",", 
      SuperscriptBox[
       StyleBox["\[Sigma]",
        FontWeight->"Plain"], "z"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c13de414-b2c6-46e6-ad93-0cab920512bd"],
 " is a ",
 StyleBox["vector",
  FontSlant->"Italic"],
 " of ",
 StyleBox["operators",
  FontSlant->"Italic"],
 ", i.e. each component of the vector ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Sigma]",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3d4cada3-6aad-4277-a785-56670057ef01"],
 " is an operator."
}], "Subitem",ExpressionUUID->"35f7e576-9a77-4bc5-b32b-97c0d78d8828"]
}, Open  ]]
}, Open  ]],

Cell["\<\
If we treat the qubit as a spin, the spin operators are related by\
\>", "TextIndent",ExpressionUUID->"d0b4ef4a-f54f-4f8a-8e39-b087a79926ba"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["S",
    FontWeight->"Bold"], "=", 
   RowBox[{
    FractionBox["\[HBar]", "2"], 
    RowBox[{
     StyleBox["\[Sigma]",
      FontWeight->"Bold"], "."}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"d7a15fa2-184a-\
4352-8ae1-0354c5869ea9"],

Cell[TextData[{
 "A beam of electrons goes through a series of Stern-Gerlach measurements as \
follows: (a) the first measurement accepts ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "z"], "=", 
    RowBox[{"\[HBar]", "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "dbcbe5cf-a46f-4d43-8c58-44094c5d7117"],
 " atoms and rejects ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "z"], "=", 
    RowBox[{
     RowBox[{"-", "\[HBar]"}], "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "0a6153de-256c-4a67-be69-4a35bb3f7081"],
 " atoms; (b) the second measurement accepts ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", 
     StyleBox["n",
      FontWeight->"Bold"]], " ", "=", " ", 
    RowBox[{"\[HBar]", "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "18a805e4-4be9-42e8-813e-64c04db0e5fa"],
 " atoms and rejects ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", 
     StyleBox["n",
      FontWeight->"Bold"]], "=", 
    RowBox[{
     RowBox[{"-", "\[HBar]"}], "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "cf65d567-e613-4e3d-bd8b-64f3ed6fe981"],
 " atoms, where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", 
    StyleBox["n",
     FontWeight->"Bold"]], TraditionalForm]],ExpressionUUID->
  "31cf3c65-e26d-471e-bd44-0606cbffcb14"],
 " is the eigenvalue of the operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["n",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["S",
     FontWeight->"Bold"]}], TraditionalForm]],ExpressionUUID->
  "22f56646-f04f-4a44-9a8b-a10e988fb86c"],
 "; (c) the third measurement accepts ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "z"], "=", 
    RowBox[{
     RowBox[{"-", "\[HBar]"}], "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "6fd65fda-805f-49da-bead-93c93e171432"],
 " atoms and rejects ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "z"], "=", 
    RowBox[{"\[HBar]", "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "6be3086d-9745-4395-acf4-f5891fec3fe7"],
 " atoms. What is the intensity of the final ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "z"], "=", 
    RowBox[{
     RowBox[{"-", "\[HBar]"}], "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "8a000713-bce0-4295-8cad-2888ca609f08"],
 " beam when the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "z"], "=", 
    RowBox[{"\[HBar]", "/", "2", " "}]}], TraditionalForm]],ExpressionUUID->
  "a60a264c-4019-43fb-91d1-e8de0ce56c17"],
 " beam surviving the first measurement is normalized to unity? How must we \
orient the second measuring apparatus if we are to maximizing the intensity \
of the final ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "z"], "=", 
    RowBox[{
     RowBox[{"-", "\[HBar]"}], "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "417edf77-a643-4f64-be77-508942067fb3"],
 " beam?"
}], "ItemNumbered",ExpressionUUID->"15c1281b-ef98-43d6-94b3-9397b0a41753"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section II (Oct. 11)", "Section",ExpressionUUID->"948de2ec-e60a-4223-a132-6828342aceeb"],

Cell[TextData[{
 "An operator (or matrix) ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "^"], TraditionalForm]],ExpressionUUID->
  "fb7bd8f7-6952-417e-888b-bc570dd688fc"],
 "is normal if is satisfies the condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      OverscriptBox["A", "^"], ",", 
      SuperscriptBox[
       OverscriptBox["A", "^"], "\[Dagger]"]}], "]"}], "=", "0"}], 
   TraditionalForm]],ExpressionUUID->"3e215d5d-3bb3-4de5-a182-f7f63a2591ad"],
 "."
}], "ItemNumbered",ExpressionUUID->"e7eef609-f0dc-4f24-b9c4-b2d77cb25179"],

Cell["\<\
(a) Show that real symmetric, hermitian, real orthogonal and unitary \
operators are normal\
\>", "TextNoIndent",ExpressionUUID->"2227bf8d-b449-42d0-92d1-a8bd40cbbbce"],

Cell[TextData[{
 "(b) Show that any operator can be written as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["A", "^"], "=", 
    RowBox[{
     OverscriptBox["H", "^"], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      OverscriptBox["G", "^"]}]}]}], TraditionalForm]],ExpressionUUID->
  "7c35bd3f-e444-4795-85af-808c38929c1f"],
 ", where ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["H", "^"], TraditionalForm]],ExpressionUUID->
  "7ff59d21-d5dd-4068-8ee6-8e27f9c9b9f3"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["G", "^"], TraditionalForm]],ExpressionUUID->
  "d771ea83-7934-42b8-b50d-1af8f6f686d1"],
 " are Hermitian. [Hint: consider the combinations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["A", "^"], "+", 
     SuperscriptBox[
      OverscriptBox["A", "^"], "\[Dagger]"]}], ",", 
    RowBox[{
     OverscriptBox["A", "^"], "-", 
     SuperscriptBox[
      OverscriptBox["A", "^"], "\[Dagger]"]}]}], TraditionalForm]],
  ExpressionUUID->"ae96ac76-6dec-4c14-a0cd-6811f7ecb048"],
 "]. Show that ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "^"], TraditionalForm]],ExpressionUUID->
  "d57a3eea-2a08-4bd1-9b88-8155c6780a8f"],
 " is normal if and only if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      OverscriptBox["H", "^"], ",", 
      OverscriptBox["G", "^"]}], "]"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"e82bdddd-f357-46d5-b877-ffed0e6b4fd7"],
 ". "
}], "TextNoIndent",ExpressionUUID->"c23759cf-884a-4c60-8f5d-1302d88cf2a0"],

Cell[TextData[{
 "(c) Show that a normal operator ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "^"], TraditionalForm]],ExpressionUUID->
  "6124b378-2b7c-48c6-ba55-69cd3cfcdd54"],
 " admits a spectral representation"
}], "TextNoIndent",ExpressionUUID->"884fd077-8759-4b5e-b2eb-fac1204fe4b1"],

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["A", "^"], "=", 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "N"], 
    RowBox[{
     SubscriptBox["\[Lambda]", "i"], 
     SubscriptBox[
      OverscriptBox["P", "^"], "i"]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"1803f0a9-6210-\
42c1-93eb-001f885ea96e"],

Cell[TextData[{
 "for a set of projectors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["P", "^"], "i"], TraditionalForm]],ExpressionUUID->
  "e9796e08-3eec-4632-a622-361516fba55d"],
 " and complex numbers ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "i"], TraditionalForm]],ExpressionUUID->
  "c7c8330c-5be3-4651-a8d1-0324bb9d0334"],
 "."
}], "TextNoIndent",ExpressionUUID->"6fa77949-1a9c-456a-9406-901a869f6110"],

Cell[TextData[{
 "Recall the trace of an operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Tr", "[", "A", "]"}], "=", 
    RowBox[{
     SubscriptBox["\[Sum]", "m"], 
     RowBox[{
      TemplateBox[{"m"},
       "Bra",
       DisplayFunction->(
        RowBox[{"\[LeftAngleBracket]", #, "\[RightBracketingBar]"}]& )], "A", 
      
      TemplateBox[{"m"},
       "Ket",
       DisplayFunction->(
        RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}]}]}],
    TraditionalForm]],ExpressionUUID->
  "6f4a5ae1-4f03-4230-af26-b2a06fa5d41c"],
 " for some basis {",
 Cell[BoxData[
  TemplateBox[{"m"},
   "Ket",
   DisplayFunction->(
    RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]],
  ExpressionUUID->"57ce7abe-4daf-4691-87ff-629f1fafd1f2"],
 "}"
}], "ItemNumbered",ExpressionUUID->"22d17a2a-31dc-4ee0-8cf0-1aac791e5f3f"],

Cell[TextData[{
 "(a) Prove that this definition is independent of basis. This implies if A \
is diagonalizable with eigenvalues ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "i"], TraditionalForm]],ExpressionUUID->
  "4eeefd5f-bfb2-47b6-a49e-a170006e9220"],
 " that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Tr", "[", "A", "]"}], "=", 
    RowBox[{
     SubscriptBox["\[Sum]", "i"], 
     SubscriptBox["\[Lambda]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "62471cca-3440-4b6f-afde-9b8987bbfefc"],
 "."
}], "TextNoIndent",ExpressionUUID->"e4709920-ac7a-48cd-854d-06179d9d700c"],

Cell["(b) Prove the cycle property: Tr[ABC]=Tr[BCA]=Tr[CAB]", "TextNoIndent",ExpressionUUID->"c3d19de1-00f9-495d-a224-c558d1f797c0"],

Cell["(c)Consider an operator A. Show the following identity", "TextNoIndent",ExpressionUUID->"35f51c1a-5a76-4a29-850d-1df3752de2c5"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"det", " ", 
    SuperscriptBox["\[ExponentialE]", "A"]}], "=", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"Tr", "[", "A", "]"}]]}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"45188ba2-dc04-\
4f93-b5b0-096e7b1c8f4c"],

Cell["Clock and shift operators", "ItemNumbered",ExpressionUUID->"76e96b1e-5a1c-498e-ab4e-5006871c2c0d"],

Cell[TextData[{
 "Consider an N-dimensional Hilbert space, with orthonormal basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"n"},
      "Ket",
      DisplayFunction->(
       RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], ",", 
     RowBox[{"n", "=", "0"}], ",", "..", ",", 
     RowBox[{"N", "-", "1"}]}]}], TraditionalForm]],ExpressionUUID->
  "49adc5c0-59c3-4ab0-8d35-4771e6ebfac8"],
 "}. Consider operators T and U which act on this N-state system by "
}], "TextNoIndent",ExpressionUUID->"658c13af-21b8-4107-b651-202ccf09cf82"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"T", 
     TemplateBox[{"n"},
      "Ket",
      DisplayFunction->(
       RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}], "=", 
    TemplateBox[{RowBox[{"n", "+", "1"}]},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}], ",", 
   " ", 
   RowBox[{
    RowBox[{"U", 
     TemplateBox[{"n"},
      "Ket",
      DisplayFunction->(
       RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"2", "\[Pi]\[ImaginaryI]n"}], "N"]], 
     RowBox[{
      TemplateBox[{"n"},
       "Ket",
       DisplayFunction->(
        RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
      "."}]}]}]}], TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->\
"3488a8b8-e5c6-4e6b-83ac-a7c656aad8da"],

Cell["\<\
In the definition of T, the label on the ket should be understood as its \
value modulo N.\
\>", "TextNoIndent",ExpressionUUID->"c6ec9c6d-cb4b-47e3-93c9-decbaca324f2"],

Cell[TextData[{
 "(a) Find the matrix representations of T and U in the basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    TemplateBox[{"n"},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}], 
   TraditionalForm]],ExpressionUUID->"297cd0ba-a0a6-4bc2-bd40-4a92e7114727"],
 "}."
}], "TextNoIndent",ExpressionUUID->"df50ef5d-fec9-4fc5-9068-c5c28dbc0f31"],

Cell[TextData[{
 "(b) What are the eigenvalues of U? What are the eigenvalues of its adjoint ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["U", "\[Dagger]"], TraditionalForm]],ExpressionUUID->
  "3a0e308e-c5a8-4884-98ac-a1af344e065a"],
 "?"
}], "TextNoIndent",ExpressionUUID->"b5c8c61e-0a81-4f0f-a269-a0ec31448abf"],

Cell["(c) Show that ", "TextNoIndent",ExpressionUUID->"894576e8-5513-4891-a48c-e7d75d2abcc0"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"U", " ", "T"}], " ", "=", " ", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"2", "\[Pi]\[ImaginaryI]"}], "N"]], "T", " ", "U"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"ade91a56-ab06-\
4c11-ba06-348f8f18c81f"],

Cell[TextData[{
 "(d) From the definition of adjoint, how does ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["T", "\[Dagger]"], TraditionalForm]],ExpressionUUID->
  "a2cae848-6812-4767-b583-9b76f65c47aa"],
 "act?"
}], "TextNoIndent",ExpressionUUID->"616a6eb3-66cd-4144-a65e-4bb5d1ccb37b"],

Cell["(e) Show that the clock operator T is normal.", "TextNoIndent",ExpressionUUID->"30aaea90-826a-4e79-ad41-535a09be0f50"],

Cell[TextData[{
 "(f) Find the eigenvalues and eigenvectors of T. [Hint: consider states of \
the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{"\[Theta]"},
     "Ket",
     DisplayFunction->(
      RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
    "\[Congruent]", 
    RowBox[{
     SubscriptBox["\[Sum]", "n"], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "n\[Theta]"}]], 
      TemplateBox[{"n"},
       "Ket",
       DisplayFunction->(
        RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}]}]}],
    TraditionalForm]],ExpressionUUID->
  "12220029-0f84-4863-9168-7a7aa708f347"],
 "]."
}], "TextNoIndent",ExpressionUUID->"04b26e7a-6e60-4a56-89b3-28026b6dab0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section III (Oct. 18)", "Section",ExpressionUUID->"f1d5f199-a350-4fdd-abde-9f9a1b6b3d15"],

Cell["Formaldehyde (From Shauna Kravec)", "ItemNumbered",ExpressionUUID->"34e5da84-3c82-40fd-84ed-e003b3d3f87d"],

Cell["\<\
Let\[CloseCurlyQuote]s consider a simple two state system motivated by the \
Huckel theory.\
\>", "TextNoIndent",ExpressionUUID->"a12c31fa-2b52-487c-9471-8ff4db69268e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChemicalData", "[", 
  RowBox[{"\"\<Formaldehyde\>\"", ",", "\"\<MoleculePlot\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"07c72211-b880-4502-a67f-b0e3e12fd1e4"],

Cell[BoxData[
 Graphics3DBox[
  {AbsoluteThickness[3], EdgeForm[None], Specularity[
    GrayLevel[1], 100], 
   GraphicsComplex3DBox[{{107.28, 20.252, 
    45.43}, {-3.4021, -0.64224, -1.4407}, {-36.069, 
    53.561, -87.718}, {-67.809, -73.17, 43.728}, {109.67768009531504`, 
    29.825521028578446`, 35.50030588205778}, {-1.0044199046849553`, 
    8.931281028578448, -11.370394117942217`}, {104.88231990468496`, 
    10.678478971421551`, 
    55.35969411794222}, {-5.799780095315045, -10.215761028578447`, 
    8.488994117942218}, {54.336630095315044`, 19.37840102857845, 
    12.064955882057781`}, {49.54126990468496, 0.23135897142155315`, 
    31.92434411794222}, {-19.735550000000003`, 
    26.45938, -44.57935}, {-35.605549999999994`, -36.90612, 21.14365}}, {
     {RGBColor[0.65, 0.7, 0.7], SphereBox[3, 24.], SphereBox[4, 24.]}, 
     {RGBColor[0.4, 0.4, 0.4], SphereBox[2, 34.]}, 
     {RGBColor[0.800498, 0.201504, 0.192061], SphereBox[1, 31.]}, 
     {RGBColor[0.65, 0.7, 0.7], CylinderBox[{11, 3}, 15.], 
      CylinderBox[{12, 4}, 15.]}, 
     {RGBColor[0.4, 0.4, 0.4], CylinderBox[{6, 9}, 8.], 
      CylinderBox[{8, 10}, 8.], CylinderBox[{2, 11}, 15.], 
      CylinderBox[{2, 12}, 15.]}, 
     {RGBColor[0.800498, 0.201504, 0.192061], CylinderBox[{5, 9}, 8.], 
      CylinderBox[{7, 10}, 8.]}}]},
  Boxed->False,
  ImageSize->116.51393483904396`,
  Lighting->"Neutral",
  ViewPoint->{-0.7459554125677664, 2.4147436900737946`, 2.244318033102629},
  ViewVertical->{
   0.8526291049249728, -0.48490094423488816`, -0.19466556889946804`}]], \
"Output",
 CellLabel->"Out[13]=",ExpressionUUID->"7b384f19-08e2-431e-bfa1-6c75f6423121"]
}, {2}]],

Cell[TextData[{
 "There are two \[Pi]-electrons associated with the double bond between \
carbon and oxygen. The Hilbert space of single \[Pi]-electron is \
\[ScriptCapitalH] = span{",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"O"},
    "Ket",
    DisplayFunction->(
     RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], ",", 
   " ", 
   TemplateBox[{"C"},
    "Ket",
    DisplayFunction->(
     RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )]}]],
  ExpressionUUID->"02afc8c2-5158-4141-b3be-03e121b1d852"],
 "}, where these represent occupation on either the carbon or oxygen."
}], "TextNoIndent",ExpressionUUID->"86d61d2b-02eb-44d0-a588-1bd3eacae61a"],

Cell["\<\
(a) Give a physical motivation for the Hamiltonian to be of the form\
\>", "TextNoIndent",ExpressionUUID->"d49d1dae-fbef-4a76-a09b-a7644d24cc32"],

Cell[BoxData[
 FormBox[
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["E", "O"], 
     TemplateBox[{"O"},
      "Ket",
      DisplayFunction->(
       RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
     TemplateBox[{"O"},
      "Bra",
      DisplayFunction->(
       RowBox[{"\[LeftAngleBracket]", #, "\[RightBracketingBar]"}]& )]}], "+", 
    RowBox[{
     SubscriptBox["E", "C"], 
     TemplateBox[{"C"},
      "Ket",
      DisplayFunction->(
       RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
     TemplateBox[{"C"},
      "Bra",
      DisplayFunction->(
       RowBox[{"\[LeftAngleBracket]", #, "\[RightBracketingBar]"}]& )]}], "-", 
    RowBox[{"A", "(", 
     RowBox[{
      RowBox[{
       TemplateBox[{"C"},
        "Ket",
        DisplayFunction->(
         RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
       TemplateBox[{"O"},
        "Bra",
        DisplayFunction->(
         RowBox[{"\[LeftAngleBracket]", #, "\[RightBracketingBar]"}]& )]}], 
      "+", 
      RowBox[{
       TemplateBox[{"O"},
        "Ket",
        DisplayFunction->(
         RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
       TemplateBox[{"C"},
        "Bra",
        DisplayFunction->(
         RowBox[{"\[LeftAngleBracket]", #, "\[RightBracketingBar]"}]& )]}]}], 
     ")"}]}]}], TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->\
"f0e5c446-0f0b-4c57-bde9-38441347c3d7"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "C"], ">", 
    SubscriptBox["E", "O"]}], TraditionalForm]], "TextIndent",ExpressionUUID->
  "3f498824-4aaa-43b7-adc0-15b9f9b1bf94"],
 " are the energies associated with being localized and A is known as the \
delocalization energy."
}], "TextNoIndent",ExpressionUUID->"168c7490-a5fe-488a-9eb0-3440145f5850"],

Cell["\<\
(b) Calculate the eigenvalues and eigenvectors associated with (8). Sketch \
how this would look in the position space. Assume the system is in its ground \
state.\
\>", "TextNoIndent",ExpressionUUID->"5a2a4d43-5848-407a-8d39-db2b477e42c1"],

Cell["\<\
(c) For a given \[Pi]-electron, calculate the probability of finding it \
localized at the oxygen.\
\>", "TextNoIndent",ExpressionUUID->"d0b52dac-2358-46eb-8199-5083914b423f"],

Cell["\<\
(d) Assume that the electric dipole moment of formaldehyde on gets \
contributions from the symmetric axis. Express this as a function of the bond \
length \[ScriptL].\
\>", "TextNoIndent",ExpressionUUID->"7acf368c-e88d-4dbb-863f-4c1bcc028687"],

Cell["Single Qubit Gate (From Nielsen-Chuang)", "ItemNumbered",ExpressionUUID->"ce0a5f6b-011c-4735-9609-52f2cccc5734"],

Cell["\<\
Aside from the usual Pauli matrices, there are a few common operators for a \
two state system. These are the Hadamard gate(H), the phase gate(S), and the \
T gate(T). In the usual Z basis, these can be written as:\
\>", "TextNoIndent",ExpressionUUID->"e0210a13-ee51-448c-b760-0d5a07e330ec"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"H", "=", 
    RowBox[{
     FractionBox["1", 
      StyleBox[
       SqrtBox[
        StyleBox["2", "TextNoIndent"]], "TextNoIndent"]], 
     RowBox[{"(", GridBox[{
        {"1", "1"},
        {"1", 
         RowBox[{"-", "1"}]}
       }], ")"}]}]}], ",", " ", 
   RowBox[{"S", "=", 
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {"0", "\[ImaginaryI]"}
      }], ")"}]}], ",", " ", 
   RowBox[{"T", "=", 
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {"0", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["\[ImaginaryI]", "4"], "\[Pi]"}]]}
      }], ")"}]}]}], TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUI\
D->"42b32635-368a-4632-9301-027a2e72a747"],

Cell[TextData[{
 "(a) Write these in terms of our orginal Pauli\[CloseCurlyQuote]s. Note that \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    SuperscriptBox["T", "2"]}], TraditionalForm]],ExpressionUUID->
  "7404e961-2c07-47fc-96b3-5ee507c8d806"],
 ". What is the action of H on Z-eigenvectors?"
}], "TextNoIndent",ExpressionUUID->"e3ed6776-670d-49f5-b24d-2b5035e786d2"],

Cell["(b) Prove the following identities", "TextNoIndent",ExpressionUUID->"4ec0feb8-d6a1-48ff-bee9-41989f9319b2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"H", " ", "X", " ", "H"}], "=", "Z"}], ",", " ", 
   RowBox[{
    RowBox[{"H", " ", "Y", " ", "H"}], "=", 
    RowBox[{"-", "Y"}]}], ",", " ", 
   RowBox[{
    RowBox[{"H", " ", "Z", " ", "H"}], "=", "X"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"2201b1e5-01d6-\
4f0f-ac02-cefafab6d68f"],

Cell[TextData[{
 "(c) Show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", 
    RowBox[{
     SubscriptBox["U", "z"], "(", 
     FractionBox["\[Pi]", "4"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "dcc166fe-437f-4e25-8d23-cdc7cb921eab"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"H", " ", "T", " ", "H"}], "=", 
     RowBox[{
      SubscriptBox["U", "x"], "(", 
      FractionBox["\[Pi]", "4"], ")"}]}], ",", " ", 
    RowBox[{
     RowBox[{"where", " ", 
      RowBox[{
       SubscriptBox["U", "n"], "(", "\[Theta]", ")"}]}], "=", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "\[ImaginaryI]"}], "2"], "\[Theta]", " ", 
       RowBox[{
        OverscriptBox["n", "^"], "\[CenterDot]", 
        OverscriptBox["\[Sigma]", "\[RightArrow]"]}]}]]}]}], 
   TraditionalForm]],ExpressionUUID->"cbbccd28-dcfd-4aa0-926e-a7ec6af1b0c2"],
 "."
}], "TextNoIndent",ExpressionUUID->"f228a6a8-eca1-41ed-a3d0-e06d58a3b71d"],

Cell["Quantum resonance in qubit system.", "ItemNumbered",ExpressionUUID->"3a5eaaf3-7ca8-45de-8b77-4824e8b5d6bd"],

Cell[TextData[StyleBox["Let\[CloseCurlyQuote]s consider a qubit system, say a \
trapped electron, whose energy gap is \[CapitalDelta]. We use a microwave \
with frequency \[Omega] to couple that system. In classical mechanics, we \
know that if the driving force has the same frequency with inertial frequency \
of the system, we will observe enhanced oscillation, which we call it \
resonance. Here, we try to see the same thing for the simplest quantum \
system.", "ItemNumbered"]], "TextNoIndent",ExpressionUUID->"311c945a-d5d7-\
4c4b-8a2e-c63d36313213"],

Cell["(a) Derive or convince yourself the Hamiltonian is", "TextNoIndent",ExpressionUUID->"3dbbdf87-5a63-4bf8-9910-e6b5e0aff543"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"H", "(", "t", ")"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        FractionBox["\[CapitalDelta]", "2"], 
        SuperscriptBox["\[Epsilon]\[ExponentialE]", 
         RowBox[{"-", "\[ImaginaryI]\[Omega]t"}]]},
       {
        SuperscriptBox["\[Epsilon]\[ExponentialE]", "\[ImaginaryI]\[Omega]t"], 
        FractionBox[
         RowBox[{"-", "\[CapitalDelta]"}], "2"]}
      }], ")"}], "."}]}], TraditionalForm]], "DisplayFormulaNumbered",Expressi\
onUUID->"42d74b97-4fd5-481a-b57f-e3abc3e60988"],

Cell["(b) Derive the time propagator.", "TextNoIndent",ExpressionUUID->"d3d5cf09-2efa-447f-8434-a0676fe4b6f4"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"U", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"cos", "(", "\[Kappa]t", ")"}], 
      OverscriptBox["I", "^"]}], "-", 
     RowBox[{
      RowBox[{"\[ImaginaryI]sin", "(", "\[Kappa]t", ")"}], "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"\[Omega]", "-", "\[CapitalDelta]"}], 
         RowBox[{"2", "\[Kappa]"}]], 
        SubscriptBox["\[Sigma]", "z"]}], "+", 
       RowBox[{
        FractionBox["\[Epsilon]", "\[Kappa]"], 
        SubscriptBox["\[Sigma]", "x"]}]}], "]"}]}]}], ","}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"93ae8ccc-6295-\
4502-b16b-bba67010fa71"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Epsilon]", "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Omega]", "-", "\[CapitalDelta]"}], ")"}], "2"], "/", 
       "4"}]}]]}], TraditionalForm]], "TextIndent",ExpressionUUID->
  "46676ae2-326d-4e31-bbb2-baab05b7fd70"],
 ". Or alternatively, we could solve the Schr\[ODoubleDot]dinger Equation."
}], "TextNoIndent",ExpressionUUID->"810e40fa-924a-4501-98fa-42504ddf548f"],

Cell["\<\
(c) Try two limit: 1) Off-resonance limit |\[Omega]-\[CapitalDelta]|\
\[GreaterGreater]|\[Epsilon]|, 2) resonance limit |\[Omega]-\[CapitalDelta]|\
\[LessLess]|\[Epsilon]|. Observe what will happen.\
\>", "TextNoIndent",ExpressionUUID->"c37dd180-26da-4603-a62b-c72e53cf64ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section IV(Oct.25)", "Section",ExpressionUUID->"cedc56fd-0ea3-4e1e-bf7e-83a94bf4fcfc"],

Cell["Quantum resonance in qubit system.", "ItemNumbered",ExpressionUUID->"c928ac33-9aef-4efb-8f1e-e9c995846313"],

Cell[TextData[StyleBox["Let\[CloseCurlyQuote]s consider a qubit system, say a \
trapped electron, whose energy gap is \[CapitalDelta]. We use a microwave \
with frequency \[Omega] to couple that system. In classical mechanics, we \
know that if the driving force has the same frequency with inertial frequency \
of the system, we will observe enhanced oscillation, which we call it \
resonance. Here, we try to see the same thing for the simplest quantum \
system.", "ItemNumbered"]], "TextNoIndent",ExpressionUUID->"ddebf4b4-b801-\
47cf-b856-82622197df6a"],

Cell["(a) Derive or convince yourself the Hamiltonian is", "TextNoIndent",ExpressionUUID->"f37537d3-9f32-4a70-bb64-5d7fd11b7eb6"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"H", "(", "t", ")"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        FractionBox["\[CapitalDelta]", "2"], 
        SuperscriptBox["\[Epsilon]\[ExponentialE]", 
         RowBox[{"-", "\[ImaginaryI]\[Omega]t"}]]},
       {
        SuperscriptBox["\[Epsilon]\[ExponentialE]", "\[ImaginaryI]\[Omega]t"], 
        FractionBox[
         RowBox[{"-", "\[CapitalDelta]"}], "2"]}
      }], ")"}], "."}]}], TraditionalForm]], "DisplayFormulaNumbered",Expressi\
onUUID->"c2f60225-6a44-4a81-9b41-a71b033dd954"],

Cell["(b) Derive the time propagator.", "TextNoIndent",ExpressionUUID->"90ee5711-3dda-4c8a-a0e9-f332412816be"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"U", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"cos", "(", "\[Kappa]t", ")"}], 
      OverscriptBox["I", "^"]}], "-", 
     RowBox[{
      RowBox[{"\[ImaginaryI]sin", "(", "\[Kappa]t", ")"}], "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"\[Omega]", "-", "\[CapitalDelta]"}], 
         RowBox[{"2", "\[Kappa]"}]], 
        SubscriptBox["\[Sigma]", "z"]}], "+", 
       RowBox[{
        FractionBox["\[Epsilon]", "\[Kappa]"], 
        SubscriptBox["\[Sigma]", "x"]}]}], "]"}]}]}], ","}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"0f298848-240f-\
487d-9092-96fda8c41638"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Epsilon]", "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Omega]", "-", "\[CapitalDelta]"}], ")"}], "2"], "/", 
       "4"}]}]]}], TraditionalForm]], "TextIndent",ExpressionUUID->
  "bc1f852e-7899-41ed-b5ab-a9bd3e85087a"],
 ". Or alternatively, we could solve the Schr\[ODoubleDot]dinger Equation."
}], "TextNoIndent",ExpressionUUID->"5ec8fda7-bc1f-4d2b-b91b-45dd270c70d5"],

Cell["\<\
(c) Try two limit: 1) Off-resonance limit |\[Omega]-\[CapitalDelta]|\
\[GreaterGreater]|\[Epsilon]|, 2) resonance limit |\[Omega]-\[CapitalDelta]|\
\[LessLess]|\[Epsilon]|. Observe what will happen.\
\>", "TextNoIndent",ExpressionUUID->"046673af-2341-4459-a1d7-e322742efef8"],

Cell["Linear Polyenes", "ItemNumbered",ExpressionUUID->"ee05fd4d-ce22-423f-9b26-faa423715d7e"],

Cell["\<\
Polyenes are molecules with chains of alternating single/double carbon bonds. \
For example, this cyanine dyes:\
\>", "TextNoIndent",ExpressionUUID->"b514e5b0-6234-42e5-a9cc-732cc7891f38"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", "\"\</Users/hyhu/Desktop/chemical.png\>\"", 
  "]"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"8d6c9ee3-4932-4786-abb1-f126ff70428e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QeUrWdVP37Lb7n+LtGlLntDVKQoNUEDAZJIAkkghARSSBAMCDFIR4kI
gtRQBAIJzQAhtEAAUQQJKomANFFEUQFFr7333s+fz4PfYeflzMyZm5k7c87s
71rPvTOnzfu+5332893fXZ7r3fehpz7gcz7rsz7rkf/fJ/859Zzzj3nEI855
9N2/+JO/nPaQR5537kPu/70nPOQH7n/u/R9xxH0/95MP/v0nx+GffP3/++T/
s0aj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj
sfL43//934VHo9FoNBqNxl5E85lGo9FoNBrLjuYzjUaj0Wg0lh3NZxqNRqPR
aCw78JT/+Z//aT7TaDQajUZjadH6TKPRaDQajWVH85lGo9FoNBrLjuYzjUaj
0Wg0lh3NZxqNRqPRaCw7ms80thPbda/slfttOgdq7nyj0dibuLZztL5/J9bI
Rd7b6+/W0XymsZ347//+79l//dd/jf+z9s9DuMF6r8lzO4H6tzcbziPn9O//
/u+zf/3Xf539x3/8x44dW6PROHiY25mvxkY2aD14f+b59PM2GrF5iwyv9/ls
iv+9tyKv8bzh53qO09f2+vwpNJ9pbBfcI+bmP//zP6/NwfXuG8/953/+51w7
4D15fiv356JjUfvk7//bv/3bGP/0T/80+7u/+7vZn//5n4//Peb5nEPzm0Zj
dxE/he0xX43YkDzvdzaq2p6pLTK3/+RP/mT2t3/7t+Nx9uwf//EfFxpeu8j4
+7//+9lf/uVfDnvy13/912vHmuOr9ubP/uzPxrGEY03tYo671+jmM43tReZk
5ldsTHSOPGbu/8M//MOab5L5a+Qx/88b8WmmI9xjo1F51qLcJ/zMeUWjYe9+
7dd+bfZbv/Vbs9/93d8d59JoNHYP0TPMWf+bk//yL/+ypn2Yx+brL/7iL84+
/OEPz377t3979od/+Iez3/md35l9/OMfn/3+7//+7G/+5m8Gh/joRz86fscj
/uAP/mD2e7/3exsONuBjH/vY7Nd//dc3HeyGv/+hD31o/O+x3/iN35j95m/+
5uxXf/VXZx/4wAdm73vf+2bvf//7x/8///M/P3vTm940e/3rXz/7pV/6pXGM
sY/Or9qz/Y7mM41ri3CWqu/mfvF79Tv87zG8hV8STmOO8kM8hndUn2mRkbm9
2cBFcjybjXx2fDXHlfNxvOzdn/7pnw4/y+c2Go3dgzlonsYPiWbCNvgfZ3jl
K185e/aznz17zGMeM/vhH/7h2ZOf/OTZox/96NmjHvWo2eMe97jZ8573vNmF
F144e/zjHz+74IILxu9PecpTZk984hM/YzzhCU+4xu8+y3sWGU996lPHeM5z
nrP2N5/xjGeMv+t4/O/zLr744tkll1wy+6Ef+qHZd3/3d8+e9axnzT7xiU8M
O8QesaPsUeNTaD7T2A5kna/abjhOtJmMP/7jP55ddtllwwaYt+a0ufy0pz1t
9sIXvnD2mte8ZvbSl750zOVLL710vPblL3/5+H+94XnzPuPHf/zHr/F7ffxF
L3rRpsNx5DOe9KQnDdvDDj7zmc8cdsbfO3DgwLCh0Zoajcbugf7yV3/1V2u/
W+/NS2v+L//yL4/5jCu8+MUvHvPaHH7d6143OM5LXvKS8Tsd5Cd/8ifHz69+
9auHJsIevepVrxq/bzR81k/8xE+M8cY3vnHt53m/+1z/v/3tb5/97M/+7Pj/
LW95y9prHcNb3/rW2VVXXTX+x4HOOuus2fd93/eN18Xn83/n830azWca24Fw
l9wnNV40BZ31kY985Oyud73rGN/7vd87u+997zs755xzZg9/+MMHz/H8Ax7w
gNkP/uAPDt9ks3H++efPfuAHfuCghr8173GfyYd74AMfOPv+7//+8f8973nP
2fHHHz97yEMeMvvgBz84uAxNyWg0GrsH+it9JmB7/C6mhB/QZMzpd77znSPu
5HHP40B0VgP3kdvC5/K75zYb9Nn8/xd/8Rfj/82Gz/ba+EL5P3/fSP6MONRP
//RPD3+P3Xn+858/7E3yDhNzajSfaWwPpveJ+LV5xn+Y4h3veMfgKfgKLhGt
lQbiZ5rMc5/73OGTmLuL6CmLDr4ZPYe/tdl47WtfO/w1fpcRTQnvesQjHjHi
8MkBlP/TaDR2D6lFCKz3Yti/8iu/Mrvoootm97///UeMCJf4oz/6o8EnwgmS
lxf7RXdNrt1WaiEXjWUnB3CKqm8nLxmnoQVfffXVsx/5kR8ZNtPv8R/xIJ/X
aD7T2F4kzmSdTx1QrTuQexfN5Yorrhg6sHy75NLJh+M7ydXzWnl2iww5eT5n
s8Eniz8VXWW9wXdjK/wfP44d+bmf+7kRd3rsYx87eI9zaL230dhd1Pi2n3Eb
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
07Hz9ejWbEntoR7+UvsML2uMaSf6Lu8FLMt57VTv61VEtJj4EdFMrf1iRvoE
3+te9xo8gn8VW7XXr1VsiPxkuYUGu5N9q9LvL/vFNBqNg0f8ocSrzb0av85z
Yi9eK5aNW7AtuAm/Rq4bHZU+Ex+JD/XKV75yPM4W0XDk16ifvuKKK4aOo446
/pT31RH/qg5/58orrxwx6c0G/8jraUH+HjtIs6bTyEEWb8Jv5AhHl8reVcZ0
r6dlxKqupctyXs1nFkfW/cSa0t+Kb2XO8kn0V6B3eG5Z+Ez4mZi3ffDkALFH
coTxNbY1OnCj0bh2yLxPvkjtwZsYS/Yt8jqchdai3wO+IF5jyFPRey+5t+JT
ycn1Px9LvNi8PnDgwMi1yXuTc2OwX/l53khezHojuTNey48Tl07OYPJ8cCV+
kvpyMbDoMukBnPyh9N7bC3bxYDDPvm/UUznPL/K63bom8izdY9HUxDXlWPJ5
6/H77tyjYo11eC0eK0/8UPMZvoC/b9TjyTA36vHrJ1Bfm9eLu64aqj7j/M1B
89U1ESO+053uNOwN3Zi/sd7+SdPHdxvpxcmusZHOhTb82te+dm2/bd/1XjjW
RmNVwA4khwZSW1Dtq366+s+IAb/3ve8dczRrXHoMZ5/K6m8tsj/BoscY7WiR
ER4W7SXnlj0O1J6LTWUtNLL3Q7TgvKfaymXBPHvPPzzqqKM+Y1hr6+vUcMx7
XYbcgN0AX/2II44Yx3D7299+dpOb3GQtx3K6rlkPxUS/7du+bW3Q5tznuUcP
JZ/xNx2TesAcj/pdfoDH3XfT46dtnnzyyWuvtw6uYq5F8oHNN34I3kJnFY92
z4oXu0cX2Qdyr/CZ2JPsZef7932eeuqpI/ZOc2ZDW5tpNLYX7ETtPxO9ptYY
8IVxAP4tzSX7B8TGpH+L920FmfebjVo3vcjectlDKnGk+H/WCbGvBz3oQWN/
GDl+WUtyvl5fOVA42zLl0syz72pJaVNZH88444zxWOKJGX5PT7ITTjhhvFYu
Em2APrJb/dlpb+7DylHofeutZ3I3jz/++PE6eVrpqbSb8SZ5oHe/+93HMemz
by6t91pc+773ve94LV6jd9wqwlxzz2UvElqueoL73Oc+43sT16b1wrLwmVpT
4FjYD7nB+JncvgsuuGCcU2oQGo3G9iD+43S/g/gVYjbiM/gM3de6Yq7yqZLL
5jOsc9krYNG/Gy1os1HjXpuN6EXpN171Gj/LmxGPwGes0ZXL1Z4zU71qmXoE
z7suzl292Y1vfOOxRrKp0bvnDddBbrfXWldpdLsNuQc5fsP6t97xux9xNq/z
fR/KdW+9v+U+fPzjH78QnzGX+PJeK19tK3NrmZD+M+Yem+I71hfipJNOGnWK
6esNy8Jnas8HcG7i3uonzCk91dmh7j3TaGwfMvena7e56H9cRi+9293udmt7
3Kf2adqThb3FIzb7ezX3L9rLImNRGxU9xXoWbSax7MTmnRPbot5KfMVj4WZT
PSY8aNn5jCH/OlxAjuJG64HzVSvmtXxK+Su7Deta1Wc24jOGmra9xGcMuTGL
8BmDPuG1Yi67vUbvFNL7Cm/hK4nFqM9W0yi2iRMk12QrMafdRPTq2B8/sz20
Jt873VN9RO8N12hsH+ralfzf2A96qJoiGr/9DMTvE2tgV8ShKp/BAYyNbEn+
VuUpix6n1+ZvbDQqf6nHw54YidPTmthM67o95NjS8K2pPlPjT8uA5jPX5DP6
Jy4zn7H/z26v0TuFaFFyZMQ59X1wv+E1NI34PekBtQx8Jj5QbFI0bblBzksu
l34X/Crn2Gg0tgfmvrkntp+8Gf6Emmq2Rd6sHFraTM0pyd6NsR1ZA9erCwpX
qLkw4RubjdonZpER7pOcZJ+R53K+Bw4cGDmHckqe//znj7h9rVsP18p57baN
3Aqazyy/PmPty/VfZX0m+oVcffennhD2NnBtEmue1lrudT5TbaHzY2+cA9vC
7sjtyv4xeyGO22isCsw9Wgv7QX8xB60bOMx55503+s1cffXVw8fI66N/TPsn
ZP5O7UnVZWqebnSQRcaiNqrqK/NiVal78jgec8c73nGsG8mNxYPqfgfNZ5rP
bBXbwWfoh+phlpXPTK9v/JLpa8w1eqlrIW9GzuyHPvShtfpsXEAvhkV5zF7h
M9UHM5ecQ2wfe+s8H/jAB466vRrfrvtz1s/a7XNqNJYB5gn/iE3hQxj2lVQD
hM/oOZM9D/J6I3GdaqNqn5J5f6f2t6nayXbap8o/5tWEV/ugZkSvYrW96imz
563BziaXeFX2b9J/J1xArVrzmeYzO4F5Gmfy9Gvc1vou1qQ/i3lIK3V9cBlr
fuZgfKdlqTGMT5X4d2osYjOdy4UXXjjygmNfEwtPf+T0IfA57FHXdjcam8Pc
S+8Y807cydouD1+/Gb1+V3UuOV85empD5dLoZyKerTdEbAo7Y2+EVeMz6rtw
FHXB84a+c1lP8Rn61W5jymfUp/Fv69CfOj/T3vYqn9HPyc/rHb+apmOOOWYp
+UzW4VqznHU5PCcch26hhzefwjw0H9M3wevNP78vG5+p8W7HHj4TXHXVVaPG
Qr9y9lZdQvxJr018yntq7lCj0Vgf5gibYe5Yx+Wo8R31JBXn5TssW33Pokge
jbVbba+adLnB7El0YlxmVc698hnDefOF5w39WtKvZq/qM+Kg8kjXG3e72932
LJ9xTa3dGx0/zrmMfCYwd3CS6KF0lvT6z1rvvlLDbl2v/Z6rVrFsfVrqvRUu
F58o18L8Yl/lKJ5++umziy66aNRghAulxjRIrcYy3geNxqFAYi/xmfRQo1Hw
G+x/LY4dP2kVNRrnxl46P3oUH5Eelbg3e0r3XhXfaMpncNWON20/tiPeZCx7
vbYYtry7cJcpn/G//bHFtXEac88+B+D1njc3/b+siA7FjjiP2BLXQo0FO3v0
0UePftF67iXnLzHvfEb2YlkWjarROJTImhXez39Q0yTGZG7Z/836kXjUKvKZ
mr/MPzrrrLNGTxr2x1qpJ0btfbHsqHzGGsJGNp/ZfjSf+RSmfGYab6KN6plH
m9EPIntOgucTa2GblhmpGa11Btl7kx5+4oknjp6V4k4e85rk7oFr4RrU3p+N
RuPTSFwXV2Ez5Mbykcwr9l8eTbTeaR7fKgF3sa6zpc5bLy/XQjxbP4zsVZl+
e8uMaT4w7Ac+0/1ndgfW5qzB7ic/J6+E7dEvj+/kPM01NoetqX2j8J/UVi4L
pveX/51H6s5rr0516vpG8C/wVppNeq/XfGrXkq1uPtNofCbMC+s4H0pOnjgT
fcJ6bj+4xGI8t2z1ylsB2yHuwmZas9lXe+HSwT2Oy7AjyxbDn4dar72MfEbO
Qeszex+JsaTGoObCpN+Mfk+uhTpKunByh83Hqgd7fNn0mbpneH3MudQ84XA8
ufbuUdfiDW94w7g2dd9Ur3NNWp9pNOYj8Wl8xT6Dej/gMnxBflJiLuLZy2RL
twp8Jb0E2VJ7VN7gBjcYvWlwPc9lf5llx6rpM/LXm8/sPSSPPvmsyR9Jfzx5
r7i1+0ufXH4DmGP8CjYpeihesGx7V9X6punjqd9OnD8/v/3tbx81bfp+yRMX
iwvnibaTGu5Go/GZSFz34osvnt3vfvebPfvZzx51hKmRtL5nH4BVBZuS/VXY
C3Ul8vOsJWL66i1WoVYbNuIz015Ay8Bnqj4zr5fRMvGZeccfPvO4xz1uqeKd
bEfyX9OLhb/gcXGl17/+9SPGYr9NfXYSg8m+cN6b801sapmQ73PaDzSPJ+c3
Oo2fP/7xj89e+tKXju9aLh87HD0rOXyrrJM3GtsBOiadk+1/zWteM3yn1BWk
/8MqzyN2M7UE7CZf0f4q1nB1Xh/84AeXzp6uh2XXZ/ZrvOlmN7vZ8N+XBZXP
pJdM9qhXY6/Pv14AOI3enTnf6DjZGy75+svE5aDymegvNRcmz6Xfp+dpjfrw
4DP2yuVL6ZtQ+8+sgkbcaOwkaLu3v/3tZ/e4xz2GT5C+B2p7aMap517VfGDn
xn7ibdkrhs0Ve7vhDW84erSsQu4MVD5z5JFHDr1jmfjMVJ/RX2C94//oRz86
+gl5He1RLexu8xn85Ta3uc04JrlqdS2fjpe85CWzO93pTmvnKi6zLEheSPY1
qT6RGh7+gt4I8rTZH/Bc6hPYHe9Jjc8y2h7nEy4Xmzq93/Ka9DNVgyDer7cn
rZxvuWy9BBuN7YQ5Yv7wZf/wD/9wLfcjmm/6TqZWkA/IT7Lvq/fEJ+L7ijWF
06yiPpN127Wp+0nxi/RpVXNgHRGDYp9rfXu9Hh5L7uNeuE7z1kf1WzjaSSed
tDb018XXUjdhuD+su3rQW3O97rTTTpudc8454/Wuw0aawk7xBDrZU5/61LEW
Zsgr8d3Uv+u7oMd4Ti95r5PjzeelSeFlOdeduq+n18Ix6psmNyLHLtbiGPWQ
k6NWjwnP0f/f3ox5vXnq+u8m6jWbxk+iQVTNIfxEDMl9pZ+VHv/4pRi375Q2
Wj9/um/bMtueqRaz3msS23ed3v3ud49rQ79yv5uH3q9vefIao/vUvljsT+V/
iWflb9Q9gHNNvTa9VP399ESv2lGQz9+p67QTo7H8yNygX+IjidXiJ+aLe9I9
K15rH9vjjjtu2Em+AJtT14XMgVVF5v10fXP93vve985e9rKXjX40l1566ezA
gQPXsE/zPmev2N95c5tdtJ7MG+6TnL9zx3Gsqf7PyGvdQ7tlSxa1Y/X73Gwc
Cj6zXce6m4hNiF2IXUnvycpn/C6Xnp4WO8T+qGOyD+MFF1wweOWq9rXaKlzb
apdf97rXjeskP1jtU3zU9M3I9a7+U/bwTs5Svbfz+bhL3TshvCjP1z3Mp3Yu
3/1OnX/zmcY8pP9U4ifh5mxL8uzoD3Lo1TSJNZk/dN/Yo2m8elXvj9jiOu/D
B8Xb2Fz6DF+a31T3fai+ZN4/r05zN7BT6+lu25LmM7uH2JH4+Ln3w2ty33ud
5/FeHAZnYVtoVGIouIy4J+14GeNI243KK6LDiHe7TjQ5dWBsd+xU6p2MymcS
24uNmvaviT5vXZi3b0JyJdPvz3t9VvzZfNc7dQ2azzSm8B26L7NXSGyL+5if
lPuV7037pmne/e53n73rXe9aq61MfWS9H+p+9quEmquXtaXm07DFL37xi0du
UTSa6LPR2GuvwWqXdhPNZ5rP7AQW+Z7rOUWvZHuuuOKKETfjO6kZxHdWZR+R
a4PE5uIXsTm0cvF/OeNiTnpI0Luii1WNLNfPz+GbseHZHyHf1TSunu/I54l5
ijP7O+n7l543Oc6dugebzzTmIfy96izWZn5S8jvYFmuzOLZewGJNfIJw79T7
VJuEHy1bjcEicL3M2/TjjG2hj+d6XXnllbN73eteQ/tVZ6reNHUb/meXc22q
PrMM637zmeYzWz2vHEv8/2ktcuIS2Z8p+Vj8JzlY73nPe0aeHjtkvVxFu7IV
hHvE/mQfcteMnsXnlI8v/p16p3l14DXnxWvY7PQAqjGk+hrfj+8Al1FbRQvy
/dDOotfEf6t6z3aj+UxjI9R5kXxewL31e5Dnas8U/Q4gukLse+aDtdpI74hV
hPnKvqbXQ7Uv4JrZJ4+Opf5XTk36uLEVcvTSyzMID9xs7AV/p/lM85lFkP2G
xI74R+aAn6NlshHZbzL9q97//vcPXUY/lfvc5z4jfsJ38rz3J7e88al7JrVd
sbVXX331qN/GZ/Q8TX5j4DvJdY8unOfDcdLnfb096LzvwIEDo/5BvZkcJ1xq
mjeZ2PxOnXvzmcY8JF8s2mLNSafz6v3w4Ac/eNRV2NfA926e4C2phUp/8vDz
6JOrCOeJs0SjqTVM2dtJra+aDJqWHOrs0+k1bHpiTrl2Naeg5k1OH9upa7oT
62n1BZeRz1T/dRn5zG7Pv6yd4S7JLU38wv2dNS9rJ79fDwj+gH1u7amC/3gf
TmTO9brzaURLT223vZxcM/VO+mJNa9djp7PPZ+y936tv5jOj1Ux5j++J7bfP
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
HnaNY8y5JvaaOZF5lhzY1PDnPKsdiw3c6/fGwcL81NfA9eWj0nJxBTqZ+RuN
2PVxvbw+uZGG+yg+j+8Cl1FjxMfVt2aRgbvSlsXPNxrug/PPP3/cn+4RGhtf
R3127mGx9RpbXAY+4/5NvGM7+Iz8J7Xe8rR3aohbRwffTT6TtdE1g+wTlH0l
HWM0veh6Ru5hr3H8X/iFXzj7mq/5mhHn0JvIfc4GeG36OtT7Kr3zYi/YFJ9v
PiTu1Hzmv9f2E4j/GW7p+ll/+B+Pecxjhg/LjpjPbLIcXs99+7d/+9CL+T10
PL0LFq1v8reyF0L8Wd9pbD87xfYYfAC+ssGfy8/zhucz+Nv19/qY/9lWeUC4
f+4590jtP2OI9zseMZY6nCv/fT0+Iy6Bj60inxHHVV9omKMGm+9/65X/K8cx
9/XjSn3UZvpMrWvezhF+gW+Ih7kXrFv6nPn+cSs81Hnyn8SH3IMHDhxY0xK9
nj6T2FUQf6DWa09rHaKBTuu1pz7+KsJ8xx2to/R2fJFNiZ1Of0E2wZw0F6On
Jpcp18tjeBBebd7jo/ThzYbcFxxVXfh0qBupP9Ps+M+0Guum43cvxC7gBdER
d5LPiMfLwTLMt/w8Hes9x2/LHj/bzWfqcW435h0TG7OdfIavssi1NayJ5j5/
1+/hvAZ/15Drm5/znNe6t9kOa+V1rnOdEWuiCbhv02cme7lCNNqsx9FiUs/A
T8Zpal3efkbleuxH3V+b7aCz0mdwY3Yg+xa49jQJa75aEL0X1M/jHOb9ovVN
fo8mD9Hmo8vQhPjwBn1fP6FFBk2f/7zZ8Jl8L2u0tTbryTQf2Ei8ezoXcKLN
8mdWqV678hl9K3z384Z5yu5MdRvrgeemfCZ5oOkdm568vouNRvyf+Ed1+F6m
j8VXyn5itHf3Gc7OT3Is7lf3vhwfa64cXjWVtMfYDveNXqM4Tq3Hm363zst5
1DyQ5Ll6PDGnuh5kfdzL98bBwvnij3KBv+EbvmHErs2V7BGRnJjcE1Xziv3J
tcv1S85L3RNho7FRDLqO9C423DtZU2qdc/jMVtbPOp+8N3tl1Hs593Nys/QR
XG+uLTLYRD2SVoHPbLc+o++LfKjp0J9v3uMbvab+Xn/mM7uv8Rl6JH3mS77k
S4Zt4ReyVVM9LjUGWZ/TNyA9bPF990j6piySD7zX15xrg/CL5AW7r7Ome5zW
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
vgQ0BWuwvrZ0hdQY196+kHrBzCdrMF6nDyXuxD6xVTWHL/fNTtnRvQLnxs9M
/3HXk8bh+rDdyScKz3UtcT86sLi374sv6/ol/y+vX5T7bjXPJdy63nf4Dk3a
vaz3Yt3/Zd6g2arVtYbJ891NLuC+U4uqbsp81j/G92E+rMdn3MPmsdw2PsBu
8xn3irpaeyb7DtSgrKeFu39waOuY67+bfCZ+nbgrXuK49SOn/crd4OfleGm6
vhd6oJ5Jjp9f5N7LvmXWXvfdPP65jHGBg4U5ab2Jz5E+NHRw65aYkZoycW7+
k2vrOsdOZ73x3ug85inez/dis+oee9Hep7Z/NzHvOzdv5YCeffbZa4MdYk+n
Q+4F30C/Tbp0vY/Y3voZclf5ectyX20Hn1GbyOaIIfjdvMP9rGHsqXXIvZPe
UO6trfQmy7XeyhoVju2+V8Oqfti9zt9Lv+zUjud+NeTzsCfWLnt+4Pmpt87a
m+8z+5wm38Pay9biMuK4/PvMo+m55trv9fvjYOB84lPSg8Xx5EbKIXCfyJlQ
Q0fPYu/pLu4h8W61aeYYLZQebD0L59zKPVC1wM1Gci7dD6kXTw2B75ifI1Zg
LXJf4+7iVdm7JYP9cI/RdNz36+3/eKhGcg1wLNdbvRk7zydjw60BbJVjpjvT
q+WLqRHZ7WOfchr5/TiWuJOcGsdbB1+FT8lW+17M8d3kM5kDyXmnuTg+3F6v
K2sn34mtcOxis3xmfQKsKXyh2EtrlcfYlvSqWSS2uWrINeV3uqbssvuXLiM2
hxOqNTFHXVd6pOvuPs/+cOZ49uhLTQLe6PrTI9PbM9cv/Z5rT+Ldvrbz+Ixz
ZEOtOXVY+zYate4x8d/6fs8vE0+et0awxdFX1DXwM9ILpA7c1jXBg9nI+hnu
E3EXa5d13sB9k2e+VYQnJ8c3IzGfOuL7swXudbU27IecGL6nXGQ2MutV3hNe
4zj54fJgnFv2lPR6z0XfSS1BPR/X03yrPfiyrtR+ezmn6AOrhOx/xR6n/4/1
33rEnruufNRzzz13cAO+EX9Bzwg23f1nLsVPqvfodq9PPjv9X9N7JnWaFT7T
XMBv8TLxs+mg1e6l/Jl5Pjt7T3+cN+b1DN1rwzlYq6bHLg+KLTrYvKCdQL13
YwPMC/ZH7JIeYw3VG4uOIN6N/2fvba+nUcpF53s7R9x0ut/qqvKXKcJn0oeF
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
53q1szv60vjZHqP6oFrLzbvs3cqWLVN9T/IPHXf2uAbnqs5U7zz6jD3GXCex
OPtf6fuu5zgfyjXJvnHpKdNo7Cekpim9lcDcMqfS/zr9jumc8tDsQ6TnsD5x
2YMhPeKWySfaKjbiMuypGLa9aJbFhjYaewFsTO2/mZ7+eYxvJe9VvEltglpt
z6lv8hheg9Oo60keDr1m2fhM+p7yH2Nz1XnpncdPsv+MHjx0dP/Tp+zdJEda
fzDXabP+MY3GKqP2xot/FPuSx5KfhrPwley9za7gN14TjXS9XnqrgvW4jBxo
taW3vOUtRz7wKp57o7FTSA5s3b8gMZP4W9ZqGo01XP02LUKtgn4S9nOV22ev
utQJ5b3Lgugz0aVcAxxFXxkxJbF+uUNyZOytpw+PGo3sY8/+0mzo7N6LC3ms
NZrGfkOt2a6PJa+u7mHLd+APidnyF975zneO9TxarzmU+Tjv8+dxnak9mx7D
tGf3bmE9PiN+b/9Sfa7aN2o0Dg7pHweJ34bfpL8n26OuSayFduExeTVyYsVi
1AEl5pQ+e35mn9guj8U2HSq/K/Zv3t+qNi7HGE0cl9Fnhq31s30IcBb92nG4
JzzhCWv7Z/scnM/z0YvFqlZZL280toKs1/nZ3KDB8IvOP//82SmnnDLit343
H/Ea+kTsUK1jrnvR1T2g8n/yiWsOW/bUyv5YO7k3xMEOxyZX78wzz7zG441G
Y2uY5+dUsAfqlOkSt73tbYdeY/69+tWvHnsg2AuBj6Xeia0QlzFoNdZ3fKDu
0Vj3R9vJORv7N2//tdjUaDPZ28oxs7FyZvzvnDzHf/yu7/qu0XvcnrbZDy+2
ctU18kZjOxDOkZrs5zznOSPuJJdGDCq6cPLwsr9c3au+6jOJc+U16S1c99+O
BpuY+F7kM/ZSOfroo4cG3nym0dhZqEtQo3z44YcPrUY/mquuumrEY9gitQr6
5ZqD1vfsV5l9XZIT6PnsjZDHdgrV/tVa9LrPo2N0fNkLmLai18wjH/nIcZ78
REN+nv7AntM3I3YxNjR5xI1GY32kBoGe6X+1grEhL3/5y9c03vg9iVNVLTW2
I1wnc7r2X6j728fnqPvZ7wQOhsc4XjXr97jHPUbN1/T5RqOx/WBn5AHrWSn/
Xh6wnBI5sWq55dPomxvtNPvrqvE2/BwduO5lvxN8ZhrDh+Q6pyY7/l5quqIf
sZX2LnCu8hTZXb147A/8xCc+ceQIT/fTm8brG43GfJgz5iFtJntR6gHxuMc9
bsSc8Bux3OwBmzi4+cVm8Dv4HKmbmsdPpvGtmr+z0/7TwYzXvva1I5atJqH5
TKOx82ALrO1iTY961KPG+i6OhB+Ie8uhZX+iv3ic3cFlklPi+cS1o2scaj4z
tYHhM+khg5uwmbGl7Ka+X3Rgtdl0KnYnfyNadz6v402NxvowN9LvKfFaPWjY
EzFePcjZktR6p1Yq8eHss5K67ppfMw/xOaoPs5PndjBDz2Q+1LznGo3G9oM9
oGHIBeZLqFfWN4IWk/1XUj8QzSJ6cOI8Ne+42rTtxtQ/C3/K35/up+348S48
Jdwm9RXOT76MvGD6kzhb5WRTbSY2um1RozEf4Rjmmp/pMeaYeLZ6ZZpvYrh8
o5pDU+1IYsbpTz6v91PiVMnd30kcDJeRA3z88cePGHbzmUbj0CAasTVf7po+
LOoQ2BJcQAyYBuN/8Rg+Fj2n8pXwB2Cn1AXtVN5J9B/Hl346NacwXKXq2OJn
coASa2Jnvdf5HThwYK13oM9JrvGUz0xj941G4zNhDplPmX8f+9jHRq9tNQY0
0NiFxKXDSWq8OpwnOf3TuiaoOcU7jYPhM3py6sFO424+02gcGrATNAv2x9xj
f5Lry58SA7/yyivXtAx+h1wTPRV+9Vd/deg6+rj4PzYoObg7gdRJsHHTGBMe
g6s4tre85S2jf45+MuJK6tH1f1CvdcUVV4zz8RoczvGmbqLGzCpnS35i26JG
Y32YM/yE5LSwLXiMfVbwnOTZsC/pS86n4CfpDeF/efr00jzPLoUjBeE8h6J/
wpSLsJnJI5yO2CPH7vfYjOYzjcbOo2q9OII5yL7QMfQsf+hDHzr04le+8pWz
iy66aPTVld+n7smeAeqFTj755NF/j+3Jfkc7NWejQ2cvmGjTuAx+hcPom3P2
2WePuL26JcesX56h5sLzetDc8Y53HHs+ON9wOojeVO1n1YEajcZ8mB/pSVVt
S2K45qne5OoO5NTwkfhHr3jFK9YGW+Nx+bRex1/6zd/8zfG5QfjMNP68U+cU
P4evRGtSQ6CX+nTIxZM39O53v3vws+hKzWcajUOD7AXAb+JLWe/1DT7vvPMG
d5HTh9/wqcSlxITpG2wPznDd6153dvOb33xoNGJVO6UBJ6ZUc3PjA7KR8n/w
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
QgghhBBCiP8v/wI04UI9
    "], {{0, 240}, {564, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
vJ71Susz1w+m6KXkpoxvsN5wcIOQ782vToVS16S2pdGRP89bAm3Bd4KJdLv0
8vT3GSEZ5zKpmbzMW1m6WXuyprPdsn/YiN7I3ti9SXXT9k0Tmx03H98CbYne
0r1VfWvO1qlt7ttqtxO3J27/eYfRjqIdb3aG7uzIUczZljP5nft39bliufzc
0V02uyp3o3fH7+7fY7rn8J4veZy8G/lG+SX5nwrYBTe+N/6+9HvR3ti9/YUW
hUf3Yffx9o3st99fW0Qtyi6aPOB7oKVYpTiv+M3BdQevl5iVVB4iHhIcGi/1
KW07rHF43+FPZXFlw+VO5Y0VChV7Kt4d4RwZOupwtKFSsTK/8uOx+GP3jrsf
b6nSqio5gT2RfuLpyZCTvT8wf6irlq/Or/5cw6sZrw2o7amzrKs7pXCqsB6u
F9TPno48PXDG5Uxbg37D8Ubpxvyz4Kzg7LMfo34cafJu6j7HPNdwXvN8RTOt
Oa8FaslqEbbGtY63hbcNtnu1d3fYdDT/ZPBTzQXVC+UXpS4WdhI7czpFl7Iv
zXeldM1d5l6e7F7X/fBK2JW7Pat6+q96X+275nbtSq9j76U+274L162vt99g
3mi9aXGz5Zb5reafzX9u7rfob7ltebttwGqgY3DFYOeQ/dDlOy53rt31vHtz
eOXw4EjwyL3RyNHxe5x7M/eT7r98kP5g4eG2McxY3iOJRyWPFR5X/aLzS+O4
xfjFCZeJW08CnzycZE8+/zX1109TOU8pT0umlafrZkxmLsy6zQ48W/1s6nnK
84W53H9R/1XxQvvF+d8cfrslDBNOveS/FL0qeC33uuaN2Zvuef/5x2+T3y68
y3sv9772A/ND78fQj9MLGZ9wn0o/63zu+OL9ZUyULBKlsPispVEAhSQcGwvA
qxoAKOEA0AaQ+WH115nr93kG+stk8weD66RvXDj3dS5bCgsAGpAlAEnnLgDO
IqnlAIAYcu+HrEEOADY1/TN/j9RYU5OvnyFWDwBOVSR6tR4AApKf3EWiBX+R
6HMF0uxdADpn/m9v/+Cv8+BiYJEp+ZjRIg0pnwP/jH8DcljK6A==
      "], "RGB", "XYZ"], 
    Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{238.7109375, Automatic},
  ImageSizeRaw->{564, 240},
  PlotRange->{{0, 564}, {0, 240}}]], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"3814c0ac-237b-42e9-a60f-25fc9d8ff65d"]
}, {2}]],

Cell["\<\
We\[CloseCurlyQuote]ll focus exclusively on the \[Pi]-electrons that compose \
the carbon bonds. We can then model this as a finite length chain composed of \
N sites.\
\>", "TextNoIndent",ExpressionUUID->"3694b2aa-f250-4a54-9caa-926610865c9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", "\"\</Users/hyhu/Desktop/chemical2.png\>\"", 
  "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"3c4f27ce-7547-4538-b7a2-c1a6005052d9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQe8zfUbx2XvFbJCyMxqKCNZaUmFSEV2RGZSNIUGZaWMSmUkiZZVWYWG
VcpK2VLKyp6f/3l/69f/knHPOb9zzx3P+/X6deXee/zOOc95vs9+LmnZuX7b
5MmSJeueNvCf+i161ujWrcWjDbIG/ufOTt3b39+pTeubOj3U5v423a5pmSLw
l6kvSJasWeDnUwb+LMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwjCTHbu1c
O1dfDXtUjzdqpKaBq1Hgat68nR5/fJSWbjuhPYejfY+GYRiGYRgJnb+0Zdlk
TX2updpXKayiuXKpWNGiKl6ggIrlvURFi16nzn0/1PTvf9Ovh6J9r4ZhGIZh
GAmX4/uX6b2Hr9ftRdMoRbbcyluvntp06qQezZurabWqypU9vZIlu0J3D5mt
6VuORft2DcMwDCN6nDypQwf2ae+e3dq1a1eMa4/2Hzis4yfP+Es6ceyg9sT8
nd3///Nf+/bryJl/MX4SeA2OHz/urhMJ6LbjC7+8Wke3VMihZMWvV54es0/5
3sE/V2vd9LZKlTK5ktV5Uh0mrIzSXRqGYRhGlDl5QieP/KXJY15Qlw4tVb9+
/RhXew1/a7o27T/xn187cfSgdv0wUZ0f+Od3GjXSHS3///uPDRyu+ZsPROEJ
hcbxwPPZvGG9fv5lg3YdsXhM7DkSuDZp7J25VTFPEZW55VH1XbLvlJ84cXyP
jvy1SI9emVJF892h+j2maHF0btZIghw6tFubNn2pPs2aqU6VKipbtmzguipw
NVXP4dP16U+/6o9o36RhnIOjR4/q8OHD7quRCAjYXcStVi6dr08/maRBTzyq
hqVKq2gRrpJq2PYJvTlnvU63vE4eP6qD25Zp0pjB6tiykapeVU7FSpTRLY3u
05P9XtSHny3Sz7viq/1yQseQ40MHdXDfHu3cvkHvDOmlFo3vUfvu/bRo295o
32ACAhvrKz1dMqNKFrhedTq9pbl7Tv8Z5GCXJtyZSpfnuVq1W43QlF1xf6dG
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
Lui5QF44W7HJsMmTkl4xu+u/cGYR0xo2bJircZk7d66zh7xzDJ+fsy7c2i4P
6nDef/9914NG3JX4LPlLfAHyj9h5fBaSklwaZ4c4AjFRzjjsc3QWfgK7p7Dd
6UkKF3ICyDe7hchZenacxboMD+QBXYWuJE7CmY0vQE0g30MumR2HDkPH+VUX
SJwLf2D06NG+PJ4hF2Mgx0i9Qqgzu84EcsCuJ/JDnKMe5KSZy0zcku9z/jFD
MKnUe5nd9V84W7DNX3755X/nfHvnDXJEvxi9XtQY+wH5y0WLFqlQoUKuV5q4
mjfLkn+HzwNx+x9++MHOvSQMOokZb8QT8E2po0EmvFgUsXvsLmq+woXYBPZW
9erVXT00s34TLfvWacvXb6p3w4Zq/PIifbJul055tn98qVkjn1bXNt3VcOQy
bT52XP9upTh+QNo+TYMeaKU2vUfpyek/a3vcP4OowPlM/pm6QvYbEAvl/z0d
RQyMWgziXX7mkrDzOKv5HJgv6g/Et3kPmU3rd98MPT/MzaWeywNZwLcjt4O/
SE0D30/U/WQxMLvrv3COEXdiJwVfPRvc28dYsmRJVwvv155WZJC4K7Wns2bN
+tdf9OoSia1xzuLfEetICnJpnIo3E5WYPPYVcQVq3j3Z/Oqrr9zuO+L2fuRz
OM+IUbBTgZodfIBEy6/z9f3bbVQkWTIlrzxQ/T5fpw0xv79qhF5oXlV5sxZT
smqv6qsjx/VvpdLhXdLSp1S7wIXKUrSRqj48TUvj/AnEPcgjNj+yQeyJmDw2
V8w9adjt+K7Ewvxk+/btLtZLPzlxEyN8eO+wfXhN/Qb7mNgBuismXt+aZ0dj
m1HrzHua2OtqzO76+/335hN58GfOtJh/58UbyAeOGzfu33ovP+BMrVu3rtNf
+IkeXh0ieSVvxgT/rvWUJR2wgbD/icUzb4T4AjXMMe0rctL0a1P34hfEM9CH
1IwRjz0XnIV+5ifilF+ma/GwhkodsLuSpb9fj05aqlMmxn71rHo3vlypUuRX
sgydNe3wMe3wvnfwD+nTDiqdP6tSpL5OFeuP1Gdx/wziFHQP8RF0IDoJ24o8
1ek6ibkExLuYG+AnyBk12ZzT4faTG3+DDU2sCx/fb8glMlOEnPPZQJ8x541c
Nbkd6gMTc3zB7K6/84rYMtRwnStu7e20ZhYN9aJ+ygXnKnVjxLTOFFvAd0Qe
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
8kF8ps8nn3yf+yVWRoze6lLjDuTD22FGLoldnbwHxDe8PcfUq1Db0KtXLzeb
HH+N2qpIxfRjA+cy98AMMk+P4fPGFz3CfWCXEvfg80h8kNiNt7Pkgw8+8L32
1w+wbdB/vL7evfE1ru+T+0B3ED9C79JTcb6d1thc1D/ju5F3op41LvI4Hp6N
iv2CPPJ5YSY5tld8kUsP7BTyZpwXvL7UGyCfxJDxreijiG97kDwbkTg7OWT0
FD1YcTU7jfcWO57dPuSU0YvBgN2APUE8JJzes1DhPWcWGTLJWcufY37OowX3
ha6kprtWrVoqU6aM2+uVL18+dxUpUsT5UfTfEx/gTIoPsond4sW5eD05I9E5
0fCzeD2ImfDZRf9xT2ebq+jpVj4/nJ3YXnzejbiF94G4KPFzdvN06tTJ2Qbk
8MjTEE9CV2AzoO/wjeODbYy+Jb5Any6fR3wleoWi+ZnkteRzR30vr9utt97q
dEeWLFncdeGFF6pkyZIuZojNSO1RfNB93mwuzhV6JqjjinZcjtcSX5K6MmIb
6BRsbexCLwbHxeuHjqF+njoF7AfioXFpc3l49V7IIecbtfboQHzg+FDv5dkO
fNbxsUqXLq2cOXP+K5+5cuXSDTfc4O6b/DL6OT7kwrwa+s8//9zpKD7z2I1x
6fvx+eA+0I3U8BBfwGc9n02NPkJnsmuIWU74EtHQUd7+JPZCYicQj+VzE019
6fWqcy8VK1ZU2rRplTx5ciVLlkwXXHDBv1fKlCmVKVMmFShQwJ1JfL6ieQZx
33yOmCNDnojaKmyuSM3XiQ3YWNhevJac1bxO+Hxe/IQLeSWPQNyT3Y7MSsT+
joauNP4P5xrvG2dXnTp1VLNmTTdXmbMPfy2+1atwP+QZiK1iexEXIacXjfPN
m+GO74ZMX3zxxU5foENiXp4eyZ07t3utyaFF28bhdeQMw2fjs8hnNj7U4Xrz
4YnFMieLOBZxBuxVbG7ee/Qd8wmJ1RC7waaID/C+4rvgx7BTmzwVZ0W0bC/s
J84K7AVmdqZIkeI/ssnF3yObfP7jQ0wEuwa/cM6cOc7/43PO/s5oxduxXZA1
zlt8J+7jTLYXrxmfK/QR8oke5Wtc9DCeC+6H/AavJTZPtHJ3vD58hvlMU/fv
2VvnuviZK664wukpbIho4O1p4b3H/qauCn0UH+oJkDfky8tN8VlBlzOnkwv5
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
    "], {{0, 262}, {
    606, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
vJ71Susz1w+m6KXkpoxvsN5wcIOQ782vToVS16S2pdGRP89bAm3Bd4KJdLv0
8vT3GSEZ5zKpmbzMW1m6WXuyprPdsn/YiN7I3ti9SXXT9k0Tmx03H98CbYne
0r1VfWvO1qlt7ttqtxO3J27/eYfRjqIdb3aG7uzIUczZljP5nft39bliufzc
0V02uyp3o3fH7+7fY7rn8J4veZy8G/lG+SX5nwrYBTe+N/6+9HvR3ti9/YUW
hUf3Yffx9o3st99fW0Qtyi6aPOB7oKVYpTiv+M3BdQevl5iVVB4iHhIcGi/1
KW07rHF43+FPZXFlw+VO5Y0VChV7Kt4d4RwZOupwtKFSsTK/8uOx+GP3jrsf
b6nSqio5gT2RfuLpyZCTvT8wf6irlq/Or/5cw6sZrw2o7amzrKs7pXCqsB6u
F9TPno48PXDG5Uxbg37D8Ubpxvyz4Kzg7LMfo34cafJu6j7HPNdwXvN8RTOt
Oa8FaslqEbbGtY63hbcNtnu1d3fYdDT/ZPBTzQXVC+UXpS4WdhI7czpFl7Iv
zXeldM1d5l6e7F7X/fBK2JW7Pat6+q96X+275nbtSq9j76U+274L162vt99g
3mi9aXGz5Zb5reafzX9u7rfob7ltebttwGqgY3DFYOeQ/dDlOy53rt31vHtz
eOXw4EjwyL3RyNHxe5x7M/eT7r98kP5g4eG2McxY3iOJRyWPFR5X/aLzS+O4
xfjFCZeJW08CnzycZE8+/zX1109TOU8pT0umlafrZkxmLsy6zQ48W/1s6nnK
84W53H9R/1XxQvvF+d8cfrslDBNOveS/FL0qeC33uuaN2Zvuef/5x2+T3y68
y3sv9772A/ND78fQj9MLGZ9wn0o/63zu+OL9ZUyULBKlsPispVEAhSQcGwvA
qxoAKOEA0AaQ+WH115nr93kG+stk8weD66RvXDj3dS5bCgsAGpAlAEnnLgDO
IqnlAIAYcu+HrEEOADY1/TN/j9RYU5OvnyFWDwBOVSR6tR4AApKf3EWiBX+R
6HMF0uxdADpn/m9v/+Cv8+BiYJEp+ZjRIg0pnwP/jH8DcljK6A==
      "], "RGB", "XYZ"], 
    Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{238.54140625000002`, Automatic},
  ImageSizeRaw->{606, 262},
  PlotRange->{{0, 606}, {0, 262}}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"e34638c1-1b39-48f6-80ba-90c17497faef"]
}, {2}]],

Cell["\<\
The difference between this and the cyclic chain is that we no longer have \
translation symmetry, and the chain have two ends. A trick is to introduce a \
fictious site, which connects the two ends, and then impose the boundary \
condition that the wavefunction must vanish there.\
\>", "TextNoIndent",ExpressionUUID->"9673fa85-1ab6-4620-884b-fb6ab66ac90c"],

Cell[TextData[{
 "(a) Write the hopping Hamiltonian, as before, but including this fictional \
site. Use the form of the translation generators ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", 
    RowBox[{
     TemplateBox[{RowBox[{"n", "+", "1"}]},
      "Ket",
      DisplayFunction->(
       RowBox[{"\[LeftBracketingBar]", #, "\[RightAngleBracket]"}]& )], 
     TemplateBox[{"n"},
      "Bra",
      DisplayFunction->(
       RowBox[{"\[LeftAngleBracket]", #, "\[RightBracketingBar]"}]& )]}]}], 
   TraditionalForm]],ExpressionUUID->"ba878117-7e1a-4434-b4e4-e49779b670ea"],
 "."
}], "TextNoIndent",ExpressionUUID->"c326c89b-1fd6-4037-8922-739081a408de"],

Cell[TextData[{
 "(b) Write the eigenvectors and eigenvalus of the operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["T", "\[Dagger]"], "+", "T"}], TraditionalForm]],
  ExpressionUUID->"fb336d7c-3ceb-41a1-9f25-f6b2d07e44c0"],
 " which satisfy the boundary condition."
}], "TextNoIndent",ExpressionUUID->"00aeea42-ce4d-4063-b0a3-44eea05c32b9"],

Cell["\<\
(c) Write down the spectrum of the Hamiltonian as before. Is there any \
degeneracy?\
\>", "TextNoIndent",ExpressionUUID->"ffb305de-2f2e-456f-9c5c-b0ccca86b717"],

Cell["\<\
(d) Assume that for N-carbons there are N many \[Pi]-electrons. What is the \
gap between the \[OpenCurlyDoubleQuote]highest occupied molecular orbital\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]lowest unoccuped \
molecular orbital\[CloseCurlyDoubleQuote]?\
\>", "TextNoIndent",ExpressionUUID->"c52ed16d-416b-42fb-b07c-195f41324309"],

Cell["\<\
(e) The absorption peak for cryptocynanine is \[Lambda]=648nm. How does this \
compare to the model with N=9 carbons? The hopping parameter is \[Beta]=3.1eV.\
\>", "TextNoIndent",ExpressionUUID->"2dcf6f81-778d-4a23-a0b6-8d7825ec67d0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{604, 685},
WindowMargins->{{Automatic, 310}, {Automatic, 51}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"CMU Article.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 83, 0, 69, "Title",ExpressionUUID->"a225c751-6c2e-4984-9409-d358355e2ab6"],
Cell[CellGroupData[{
Cell[688, 26, 92, 0, 70, "Section",ExpressionUUID->"6fb96a00-a7c8-47ee-8a94-83c6a85b6487"],
Cell[CellGroupData[{
Cell[805, 30, 2474, 77, 70, "ItemNumbered",ExpressionUUID->"2917b9b3-8f90-48c7-bbfb-28fcdc5ffddd"],
Cell[3282, 109, 1852, 57, 69, "ItemNumbered",ExpressionUUID->"909f70c9-08d5-40a7-bed9-c770bc351222"],
Cell[5137, 168, 569, 16, 28, "ItemNumbered",ExpressionUUID->"7d6232fe-a487-403b-b4ef-4861a5ff54db"],
Cell[5709, 186, 1017, 30, 30, "DisplayFormulaNumbered",ExpressionUUID->"bd99085c-9404-42b8-a426-7cbdaf84c25f"],
Cell[6729, 218, 642, 23, 25, "ItemParagraph",ExpressionUUID->"8e03e83d-9573-43a6-b259-5b2cb45fb395"],
Cell[CellGroupData[{
Cell[7396, 245, 405, 13, 28, "Subitem",ExpressionUUID->"9d3a1a1f-ff2b-42d9-92de-a609d7f543e9"],
Cell[7804, 260, 570, 20, 30, "DisplayFormulaNumbered",ExpressionUUID->"b8b3962a-d351-49a5-ab31-26eef371de02"],
Cell[8377, 282, 1089, 39, 49, "Subitem",ExpressionUUID->"35f7e576-9a77-4bc5-b32b-97c0d78d8828"]
}, Open  ]]
}, Open  ]],
Cell[9493, 325, 151, 2, 27, "TextIndent",ExpressionUUID->"d0b4ef4a-f54f-4f8a-8e39-b087a79926ba"],
Cell[9647, 329, 310, 11, 43, "DisplayFormulaNumbered",ExpressionUUID->"d7a15fa2-184a-4352-8ae1-0354c5869ea9"],
Cell[9960, 342, 2966, 93, 193, "ItemNumbered",ExpressionUUID->"15c1281b-ef98-43d6-94b3-9397b0a41753"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12963, 440, 94, 0, 70, "Section",ExpressionUUID->"948de2ec-e60a-4223-a132-6828342aceeb"],
Cell[13060, 442, 576, 17, 34, "ItemNumbered",ExpressionUUID->"e7eef609-f0dc-4f24-b9c4-b2d77cb25179"],
Cell[13639, 461, 178, 3, 44, "TextNoIndent",ExpressionUUID->"2227bf8d-b449-42d0-92d1-a8bd40cbbbce"],
Cell[13820, 466, 1536, 49, 75, "TextNoIndent",ExpressionUUID->"c23759cf-884a-4c60-8f5d-1302d88cf2a0"],
Cell[15359, 517, 296, 7, 26, "TextNoIndent",ExpressionUUID->"884fd077-8759-4b5e-b2eb-fac1204fe4b1"],
Cell[15658, 526, 368, 12, 35, "DisplayFormulaNumbered",ExpressionUUID->"1803f0a9-6210-42c1-93eb-001f885ea96e"],
Cell[16029, 540, 445, 13, 27, "TextNoIndent",ExpressionUUID->"6fa77949-1a9c-456a-9406-901a869f6110"],
Cell[16477, 555, 869, 28, 28, "ItemNumbered",ExpressionUUID->"22d17a2a-31dc-4ee0-8cf0-1aac791e5f3f"],
Cell[17349, 585, 607, 17, 45, "TextNoIndent",ExpressionUUID->"e4709920-ac7a-48cd-854d-06179d9d700c"],
Cell[17959, 604, 132, 0, 24, "TextNoIndent",ExpressionUUID->"c3d19de1-00f9-495d-a224-c558d1f797c0"],
Cell[18094, 606, 133, 0, 24, "TextNoIndent",ExpressionUUID->"35f51c1a-5a76-4a29-850d-1df3752de2c5"],
Cell[18230, 608, 291, 8, 30, "DisplayFormulaNumbered",ExpressionUUID->"45188ba2-dc04-4f93-b5b0-096e7b1c8f4c"],
Cell[18524, 618, 104, 0, 27, "ItemNumbered",ExpressionUUID->"76e96b1e-5a1c-498e-ab4e-5006871c2c0d"],
Cell[18631, 620, 584, 14, 65, "TextNoIndent",ExpressionUUID->"658c13af-21b8-4107-b651-202ccf09cf82"],
Cell[19218, 636, 944, 30, 36, "DisplayFormulaNumbered",ExpressionUUID->"3488a8b8-e5c6-4e6b-83ac-a7c656aad8da"],
Cell[20165, 668, 177, 3, 44, "TextNoIndent",ExpressionUUID->"c6ec9c6d-cb4b-47e3-93c9-decbaca324f2"],
Cell[20345, 673, 415, 11, 25, "TextNoIndent",ExpressionUUID->"df50ef5d-fec9-4fc5-9068-c5c28dbc0f31"],
Cell[20763, 686, 316, 7, 25, "TextNoIndent",ExpressionUUID->"b5c8c61e-0a81-4f0f-a269-a0ec31448abf"],
Cell[21082, 695, 93, 0, 24, "TextNoIndent",ExpressionUUID->"894576e8-5513-4891-a48c-e7d75d2abcc0"],
Cell[21178, 697, 321, 9, 36, "DisplayFormulaNumbered",ExpressionUUID->"ade91a56-ab06-4c11-ba06-348f8f18c81f"],
Cell[21502, 708, 289, 7, 25, "TextNoIndent",ExpressionUUID->"616a6eb3-66cd-4144-a65e-4bb5d1ccb37b"],
Cell[21794, 717, 124, 0, 24, "TextNoIndent",ExpressionUUID->"30aaea90-826a-4e79-ad41-535a09be0f50"],
Cell[21921, 719, 766, 23, 45, "TextNoIndent",ExpressionUUID->"04b26e7a-6e60-4a56-89b3-28026b6dab0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22724, 747, 95, 0, 70, "Section",ExpressionUUID->"f1d5f199-a350-4fdd-abde-9f9a1b6b3d15"],
Cell[22822, 749, 112, 0, 27, "ItemNumbered",ExpressionUUID->"34e5da84-3c82-40fd-84ed-e003b3d3f87d"],
Cell[22937, 751, 178, 3, 24, "TextNoIndent",ExpressionUUID->"a12c31fa-2b52-487c-9471-8ff4db69268e"],
Cell[CellGroupData[{
Cell[23140, 758, 208, 4, 31, "Input",ExpressionUUID->"07c72211-b880-4502-a67f-b0e3e12fd1e4"],
Cell[23351, 764, 1641, 32, 134, "Output",ExpressionUUID->"7b384f19-08e2-431e-bfa1-6c75f6423121"]
}, {2}]],
Cell[25004, 799, 685, 17, 64, "TextNoIndent",ExpressionUUID->"86d61d2b-02eb-44d0-a588-1bd3eacae61a"],
Cell[25692, 818, 155, 2, 24, "TextNoIndent",ExpressionUUID->"d49d1dae-fbef-4a76-a09b-a7644d24cc32"],
Cell[25850, 822, 1471, 46, 30, "DisplayFormulaNumbered",ExpressionUUID->"f0e5c446-0f0b-4c57-bde9-38441347c3d7"],
Cell[27324, 870, 395, 10, 45, "TextNoIndent",ExpressionUUID->"168c7490-a5fe-488a-9eb0-3440145f5850"],
Cell[27722, 882, 250, 4, 44, "TextNoIndent",ExpressionUUID->"5a2a4d43-5848-407a-8d39-db2b477e42c1"],
Cell[27975, 888, 185, 3, 44, "TextNoIndent",ExpressionUUID->"d0b52dac-2358-46eb-8199-5083914b423f"],
Cell[28163, 893, 254, 4, 44, "TextNoIndent",ExpressionUUID->"7acf368c-e88d-4dbb-863f-4c1bcc028687"],
Cell[28420, 899, 118, 0, 27, "ItemNumbered",ExpressionUUID->"ce0a5f6b-011c-4735-9609-52f2cccc5734"],
Cell[28541, 901, 301, 4, 64, "TextNoIndent",ExpressionUUID->"e0210a13-ee51-448c-b760-0d5a07e330ec"],
Cell[28845, 907, 759, 27, 53, "DisplayFormulaNumbered",ExpressionUUID->"42b32635-368a-4632-9301-027a2e72a747"],
Cell[29607, 936, 379, 9, 45, "TextNoIndent",ExpressionUUID->"e3ed6776-670d-49f5-b24d-2b5035e786d2"],
Cell[29989, 947, 113, 0, 24, "TextNoIndent",ExpressionUUID->"4ec0feb8-d6a1-48ff-bee9-41989f9319b2"],
Cell[30105, 949, 372, 11, 30, "DisplayFormulaNumbered",ExpressionUUID->"2201b1e5-01d6-4f0f-ac02-cefafab6d68f"],
Cell[30480, 962, 1003, 31, 34, "TextNoIndent",ExpressionUUID->"f228a6a8-eca1-41ed-a3d0-e06d58a3b71d"],
Cell[31486, 995, 113, 0, 27, "ItemNumbered",ExpressionUUID->"3a5eaaf3-7ca8-45de-8b77-4824e8b5d6bd"],
Cell[31602, 997, 557, 7, 104, "TextNoIndent",ExpressionUUID->"311c945a-d5d7-4c4b-8a2e-c63d36313213"],
Cell[32162, 1006, 129, 0, 24, "TextNoIndent",ExpressionUUID->"3dbbdf87-5a63-4bf8-9910-e6b5e0aff543"],
Cell[32294, 1008, 569, 15, 61, "DisplayFormulaNumbered",ExpressionUUID->"42d74b97-4fd5-481a-b57f-e3abc3e60988"],
Cell[32866, 1025, 110, 0, 24, "TextNoIndent",ExpressionUUID->"d3d5cf09-2efa-447f-8434-a0676fe4b6f4"],
Cell[32979, 1027, 701, 21, 43, "DisplayFormulaNumbered",ExpressionUUID->"93ae8ccc-6295-4502-b16b-bba67010fa71"],
Cell[33683, 1050, 551, 15, 49, "TextNoIndent",ExpressionUUID->"810e40fa-924a-4501-98fa-42504ddf548f"],
Cell[34237, 1067, 285, 4, 44, "TextNoIndent",ExpressionUUID->"c37dd180-26da-4603-a62b-c72e53cf64ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34559, 1076, 92, 0, 70, "Section",ExpressionUUID->"cedc56fd-0ea3-4e1e-bf7e-83a94bf4fcfc"],
Cell[34654, 1078, 113, 0, 27, "ItemNumbered",ExpressionUUID->"c928ac33-9aef-4efb-8f1e-e9c995846313"],
Cell[34770, 1080, 557, 7, 104, "TextNoIndent",ExpressionUUID->"ddebf4b4-b801-47cf-b856-82622197df6a"],
Cell[35330, 1089, 129, 0, 24, "TextNoIndent",ExpressionUUID->"f37537d3-9f32-4a70-bb64-5d7fd11b7eb6"],
Cell[35462, 1091, 569, 15, 61, "DisplayFormulaNumbered",ExpressionUUID->"c2f60225-6a44-4a81-9b41-a71b033dd954"],
Cell[36034, 1108, 110, 0, 24, "TextNoIndent",ExpressionUUID->"90ee5711-3dda-4c8a-a0e9-f332412816be"],
Cell[36147, 1110, 701, 21, 43, "DisplayFormulaNumbered",ExpressionUUID->"0f298848-240f-487d-9092-96fda8c41638"],
Cell[36851, 1133, 551, 15, 49, "TextNoIndent",ExpressionUUID->"5ec8fda7-bc1f-4d2b-b91b-45dd270c70d5"],
Cell[37405, 1150, 285, 4, 44, "TextNoIndent",ExpressionUUID->"046673af-2341-4459-a1d7-e322742efef8"],
Cell[37693, 1156, 94, 0, 27, "ItemNumbered",ExpressionUUID->"ee05fd4d-ce22-423f-9b26-faa423715d7e"],
Cell[37790, 1158, 198, 3, 44, "TextNoIndent",ExpressionUUID->"b514e5b0-6234-42e5-a9cc-732cc7891f38"],
Cell[CellGroupData[{
Cell[38013, 1165, 179, 3, 31, "Input",ExpressionUUID->"8d6c9ee3-4932-4786-abb1-f126ff70428e"],
Cell[38195, 1170, 50795, 838, 117, "Output",ExpressionUUID->"3814c0ac-237b-42e9-a60f-25fc9d8ff65d"]
}, {2}]],
Cell[89002, 2011, 254, 4, 44, "TextNoIndent",ExpressionUUID->"3694b2aa-f250-4a54-9caa-926610865c9e"],
Cell[CellGroupData[{
Cell[89281, 2019, 180, 3, 31, "Input",ExpressionUUID->"3c4f27ce-7547-4538-b7a2-c1a6005052d9"],
Cell[89464, 2024, 40413, 668, 118, "Output",ExpressionUUID->"e34638c1-1b39-48f6-80ba-90c17497faef"]
}, {2}]],
Cell[129889, 2695, 368, 5, 84, "TextNoIndent",ExpressionUUID->"9673fa85-1ab6-4620-884b-fb6ab66ac90c"],
Cell[130260, 2702, 659, 17, 45, "TextNoIndent",ExpressionUUID->"c326c89b-1fd6-4037-8922-739081a408de"],
Cell[130922, 2721, 361, 8, 45, "TextNoIndent",ExpressionUUID->"00aeea42-ce4d-4063-b0a3-44eea05c32b9"],
Cell[131286, 2731, 171, 3, 44, "TextNoIndent",ExpressionUUID->"ffb305de-2f2e-456f-9c5c-b0ccca86b717"],
Cell[131460, 2736, 353, 5, 64, "TextNoIndent",ExpressionUUID->"c52ed16d-416b-42fb-b07c-195f41324309"],
Cell[131816, 2743, 244, 3, 44, "TextNoIndent",ExpressionUUID->"2dcf6f81-778d-4a23-a0b6-8d7825ec67d0"]
}, Open  ]]
}, Open  ]]
}
]
*)

